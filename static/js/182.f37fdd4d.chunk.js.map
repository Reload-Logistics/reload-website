{"version":3,"file":"static/js/182.f37fdd4d.chunk.js","mappings":";yIAKA,IAAMA,EAAqB,CACzB,qBACA,sBACA,wBACA,uBACA,sBACA,oCACA,+BACA,+BACA,gEACA,6CACA,wBAEIC,EAAoCD,EAAmBE,KAAK,KAE5DC,EAA+B,qBAAZC,QAEnBC,EAAUF,EACZ,WAAa,EACbC,QAAQE,UAAUD,SAClBD,QAAQE,UAAUC,mBAClBH,QAAQE,UAAUE,sBAEhBC,GACHN,GAAaC,QAAQE,UAAUG,YAC5B,SAACC,GAAO,IAAAC,EAAA,OAAK,OAAAD,QAAO,IAAPA,GAAoB,QAAbC,EAAPD,EAASD,mBAAT,IAAoBE,OAAb,EAAPA,EAAAC,KAAAF,EAAwB,EACrC,SAACA,GAAO,OAAK,OAAAA,QAAA,IAAAA,OAAA,EAAAA,EAASG,aAAa,EAUnCC,EAAU,SAAVA,EAAoBC,EAAMC,GAAe,IAAAC,OAAT,IAAND,IAAAA,GAAS,GAIvC,IAAME,EAAe,OAAJH,QAAI,IAAJA,GAAkB,QAAdE,EAAJF,EAAMI,oBAAY,IAAAF,OAAd,EAAJA,EAAAL,KAAAG,EAAqB,SAUtC,MAT2B,KAAbG,GAAgC,SAAbA,GAORF,GAAUD,GAAQD,EAAQC,EAAKK,WAG1D,EAqBMC,EAAgB,SAAUC,EAAIC,EAAkBC,GAGpD,GAAIV,EAAQQ,GACV,MAAO,GAGT,IAAIG,EAAaC,MAAMpB,UAAUqB,MAAMC,MACrCN,EAAGO,iBAAiB5B,IAMtB,OAJIsB,GAAoBlB,EAAQO,KAAKU,EAAIrB,IACvCwB,EAAWK,QAAQR,GAErBG,EAAaA,EAAWD,OAAOA,EAEjC,EAoCMO,EAA2B,SAA3BA,EACJC,EACAT,EACAU,GAIA,IAFA,IAAMR,EAAa,GACbS,EAAkBR,MAAMS,KAAKH,GAC5BE,EAAgBE,QAAQ,CAC7B,IAAM1B,EAAUwB,EAAgBG,QAChC,IAAIvB,EAAQJ,GAAS,GAMrB,GAAwB,SAApBA,EAAQ4B,QAAoB,CAE9B,IAAMC,EAAW7B,EAAQ8B,mBAEnBC,EAAmBV,EADTQ,EAASH,OAASG,EAAW7B,EAAQgC,UACM,EAAMT,GAC7DA,EAAQU,QACVlB,EAAWmB,KAAIhB,MAAfH,EAAmBgB,GAEnBhB,EAAWmB,KAAK,CACdC,YAAanC,EACbe,WAAYgB,GAGlB,KAAO,CAEkBpC,EAAQO,KAAKF,EAAST,IAG3CgC,EAAQT,OAAOd,KACda,IAAqBS,EAASc,SAASpC,KAExCe,EAAWmB,KAAKlC,GAIlB,IAAMqC,EACJrC,EAAQqC,YAE0B,oBAA1Bd,EAAQe,eACdf,EAAQe,cAActC,GAKpBuC,GACHnC,EAAQiC,GAAY,MACnBd,EAAQiB,kBAAoBjB,EAAQiB,iBAAiBxC,IAEzD,GAAIqC,GAAcE,EAAiB,CAOjC,IAAME,EAAmBpB,GACR,IAAfgB,EAAsBrC,EAAQgC,SAAWK,EAAWL,UACpD,EACAT,GAGEA,EAAQU,QACVlB,EAAWmB,KAAIhB,MAAfH,EAAmB0B,GAEnB1B,EAAWmB,KAAK,CACdC,YAAanC,EACbe,WAAY0B,GAGlB,MAGEjB,EAAgBJ,QAAOF,MAAvBM,EAA2BxB,EAAQgC,SAEvC,CACF,CACA,OAAOjB,CACT,EAQM2B,EAAc,SAAUrC,GAC5B,OAAQsC,MAAMC,SAASvC,EAAKI,aAAa,YAAa,IACxD,EAQMoC,EAAc,SAAUxC,GAC5B,IAAKA,EACH,MAAM,IAAIyC,MAAM,oBAGlB,OAAIzC,EAAK0C,SAAW,IASf,0BAA0BC,KAAK3C,EAAKuB,UAnLjB,SAAUvB,GAAM,IAAA4C,EAIlCC,EAAe,OAAJ7C,QAAI,IAAJA,GAAkB,QAAd4C,EAAJ5C,EAAMI,oBAAY,IAAAwC,OAAd,EAAJA,EAAA/C,KAAAG,EAAqB,mBACtC,MAAoB,KAAb6C,GAAgC,SAAbA,CAC5B,CA8KQC,CAAkB9C,MACnBqC,EAAYrC,GAEN,EAIJA,EAAK0C,QACd,EAoBMK,EAAuB,SAAUC,EAAGC,GACxC,OAAOD,EAAEN,WAAaO,EAAEP,SACpBM,EAAEE,cAAgBD,EAAEC,cACpBF,EAAEN,SAAWO,EAAEP,QACrB,EAEMS,EAAU,SAAUnD,GACxB,MAAwB,UAAjBA,EAAKuB,OACd,EA8DM6B,EAAqB,SAAUpD,GACnC,OALc,SAAUA,GACxB,OAAOmD,EAAQnD,IAAuB,UAAdA,EAAKqD,IAC/B,CAGSC,CAAQtD,KAxCO,SAAUA,GAChC,IAAKA,EAAKuD,KACR,OAAO,EAET,IAOIC,EAPEC,EAAazD,EAAK0D,MAAQhE,EAAYM,GACtC2D,EAAc,SAAUJ,GAC5B,OAAOE,EAAW3C,iBAChB,6BAA+ByC,EAAO,OAK1C,GACoB,qBAAXK,QACe,qBAAfA,OAAOC,KACe,oBAAtBD,OAAOC,IAAIC,OAElBN,EAAWG,EAAYC,OAAOC,IAAIC,OAAO9D,EAAKuD,YAE9C,IACEC,EAAWG,EAAY3D,EAAKuD,MAC5B,MAAOQ,GAMP,OAJAC,QAAQC,MACN,2IACAF,EAAIG,UAEC,CACT,CAGF,IAAMC,EAvCgB,SAAUC,EAAOV,GACvC,IAAK,IAAIW,EAAI,EAAGA,EAAID,EAAM/C,OAAQgD,IAChC,GAAID,EAAMC,GAAGF,SAAWC,EAAMC,GAAGX,OAASA,EACxC,OAAOU,EAAMC,EAGnB,CAiCkBC,CAAgBd,EAAUxD,EAAK0D,MAC/C,OAAQS,GAAWA,IAAYnE,CACjC,CAO2BuE,CAAgBvE,EAC3C,EAoDMwE,EAAa,SAAUxE,GAC3B,IAAAyE,EAA0BzE,EAAK0E,wBAAvBC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OACf,OAAiB,IAAVD,GAA0B,IAAXC,CACxB,EACMC,EAAW,SAAU7E,EAAI8E,GAAmC,IAA/BC,EAAYD,EAAZC,aAAc9C,EAAa6C,EAAb7C,cAM/C,GAA0C,WAAtC+C,iBAAiBhF,GAAMiF,WACzB,OAAO,EAGT,IACMC,EADkB5F,EAAQO,KAAKG,EAAM,iCACAA,EAAKmF,cAAgBnF,EAChE,GAAIV,EAAQO,KAAKqF,EAAkB,yBACjC,OAAO,EAGT,GACGH,GACgB,SAAjBA,GACiB,gBAAjBA,GAqEK,GAAqB,kBAAjBA,EAMT,OAAOP,EAAWxE,OA1ElB,CACA,GAA6B,oBAAlBiC,EAA8B,CAIvC,IADA,IAAMmD,EAAepF,EACdA,GAAM,CACX,IAAMmF,EAAgBnF,EAAKmF,cACrBE,EAAW3F,EAAYM,GAC7B,GACEmF,IACCA,EAAcnD,aACkB,IAAjCC,EAAckD,GAId,OAAOX,EAAWxE,GAGlBA,EAFSA,EAAKsF,aAEPtF,EAAKsF,aACFH,GAAiBE,IAAarF,EAAKF,cAKtCqF,EAHAE,EAASE,IAKpB,CAEAvF,EAAOoF,CACT,CAWA,GAjHmB,SAAUpF,GAAM,IAAAwF,EA8BFC,EAAAC,EAAAC,EAN/BC,EAAW5F,GAAQN,EAAYM,GAC/B6F,EAAuB,QAAXL,EAAGI,SAAQ,IAAAJ,OAAA,EAARA,EAAUD,KAIzBO,GAAW,EACf,GAAIF,GAAYA,IAAa5F,EAM3B,IALA8F,KACc,QAAZL,EAAAI,SAAY,IAAAJ,GAAe,QAAfC,EAAZD,EAAc3F,qBAAa,IAAA4F,GAA3BA,EAA6BK,SAASF,IAClC,OAAJ7F,QAAI,IAAJA,GAAmB,QAAf2F,EAAJ3F,EAAMF,qBAAa,IAAA6F,GAAnBA,EAAqBI,SAAS/F,KAGxB8F,GAAYD,GAAc,KAAAG,EAAAC,EAAAC,EAMhCJ,IAAyB,QAAbG,EADZJ,EAAuB,QAAXG,EADZJ,EAAWlG,EAAYmG,UACA,IAAAG,OAAA,EAARA,EAAUT,YACA,IAAAU,GAAe,QAAfC,EAAZD,EAAcnG,qBAAa,IAAAoG,IAA3BA,EAA6BH,SAASF,GACrD,CAGF,OAAOC,CACT,CAkEQK,CAAenG,GAKjB,OAAQA,EAAKoG,iBAAiB/E,OAmBhC,GAAqB,gBAAjB0D,EACF,OAAO,CAGX,CAWA,OAAO,CACT,EAmCMsB,EAAkC,SAAUnF,EAASlB,GACzD,QACEA,EAAKsG,UAILvG,EAAQC,IAnQU,SAAUA,GAC9B,OAAOmD,EAAQnD,IAAuB,WAAdA,EAAKqD,IAC/B,CAkQIkD,CAAcvG,IACd6E,EAAS7E,EAAMkB,IAjQU,SAAUlB,GAMrC,MAJmB,YAAjBA,EAAKuB,SACLZ,MAAMpB,UAAUqB,MACbC,MAAMb,EAAK2B,UACX6E,MAAK,SAACC,GAAK,MAAuB,YAAlBA,EAAMlF,UAE7B,CA4PImF,CAAqB1G,IAxCM,SAAUA,GACvC,GAAI,mCAAmC2C,KAAK3C,EAAKuB,SAG/C,IAFA,IAAIlB,EAAaL,EAAKmF,cAEf9E,GAAY,CACjB,GAA2B,aAAvBA,EAAWkB,SAA0BlB,EAAWiG,SAAU,CAE5D,IAAK,IAAIjC,EAAI,EAAGA,EAAIhE,EAAWsB,SAASN,OAAQgD,IAAK,CACnD,IAAMoC,EAAQpG,EAAWsB,SAASgF,KAAKtC,GAEvC,GAAsB,WAAlBoC,EAAMlF,QAGR,QAAOjC,EAAQO,KAAKQ,EAAY,0BAE3BoG,EAAMV,SAAS/F,EAExB,CAEA,OAAO,CACT,CACAK,EAAaA,EAAW8E,aAC1B,CAKF,OAAO,CACT,CAaIyB,CAAuB5G,GAK3B,EAEM6G,EAAiC,SAAU3F,EAASlB,GACxD,QACEoD,EAAmBpD,IACnBwC,EAAYxC,GAAQ,IACnBqG,EAAgCnF,EAASlB,GAK9C,EAEM8G,EAA4B,SAAUC,GAC1C,IAAMrE,EAAWH,SAASwE,EAAe3G,aAAa,YAAa,IACnE,SAAIkC,MAAMI,IAAaA,GAAY,EAMrC,EAMMsE,EAAc,SAAdA,EAAwBtG,GAC5B,IAAMuG,EAAmB,GACnBC,EAAmB,GAqBzB,OApBAxG,EAAWyG,SAAQ,SAAUR,EAAMtC,GACjC,IAAM+C,IAAYT,EAAK7E,YACjBnC,EAAUyH,EAAUT,EAAK7E,YAAc6E,EACvCU,EAlUmB,SAAUrH,EAAMoH,GAC3C,IAAM1E,EAAWF,EAAYxC,GAE7B,OAAI0C,EAAW,GAAK0E,IAAY/E,EAAYrC,GACnC,EAGF0C,CACT,CA0T8B4E,CAAqB3H,EAASyH,GAClDnG,EAAWmG,EAAUJ,EAAYL,EAAKjG,YAAcf,EAChC,IAAtB0H,EACFD,EACIH,EAAiBpF,KAAIhB,MAArBoG,EAAyBhG,GACzBgG,EAAiBpF,KAAKlC,GAE1BuH,EAAiBrF,KAAK,CACpBqB,cAAemB,EACf3B,SAAU2E,EACVV,KAAMA,EACNS,QAASA,EACTG,QAAStG,GAGf,IAEOiG,EACJM,KAAKzE,GACL0E,QAAO,SAACC,EAAKC,GAIZ,OAHAA,EAASP,QACLM,EAAI7F,KAAIhB,MAAR6G,EAAYC,EAASJ,SACrBG,EAAI7F,KAAK8F,EAASJ,SACfG,CACT,GAAG,IACFE,OAAOX,EACZ,EAEMY,EAAW,SAAUC,EAAW5G,GAGpC,IAAIR,EAmBJ,OAjBEA,GAJFQ,EAAUA,GAAW,CAAC,GAGVe,cACGjB,EACX,CAAC8G,GACD5G,EAAQV,iBACR,CACEC,OAAQoG,EAA+BkB,KAAK,KAAM7G,GAClDU,SAAS,EACTK,cAAef,EAAQe,cACvBE,iBAAkB2E,IAITxG,EACXwH,EACA5G,EAAQV,iBACRqG,EAA+BkB,KAAK,KAAM7G,IAGvC8F,EAAYtG,EACrB,EA2BMsH,EAAa,SAAUhI,EAAMkB,GAEjC,GADAA,EAAUA,GAAW,CAAC,GACjBlB,EACH,MAAM,IAAIyC,MAAM,oBAElB,OAA8C,IAA1CnD,EAAQO,KAAKG,EAAMd,IAGhB2H,EAA+B3F,EAASlB,EACjD,6JC3pBA,SAASiI,EAA2BnD,EAAMoD,EAAWC,GACnD,IAAI,UACFC,EAAS,SACTC,GACEvD,EACJ,MAAMwD,GAAWC,EAAAA,EAAAA,IAAYL,GACvBM,GAAgBC,EAAAA,EAAAA,IAAiBP,GACjCQ,GAAcC,EAAAA,EAAAA,IAAcH,GAC5BI,GAAOC,EAAAA,EAAAA,IAAQX,GACfY,EAA0B,MAAbR,EACbS,EAAUX,EAAUY,EAAIZ,EAAUzD,MAAQ,EAAI0D,EAAS1D,MAAQ,EAC/DsE,EAAUb,EAAUc,EAAId,EAAUxD,OAAS,EAAIyD,EAASzD,OAAS,EACjEuE,EAAcf,EAAUM,GAAe,EAAIL,EAASK,GAAe,EACzE,IAAIU,EACJ,OAAQR,GACN,IAAK,MACHQ,EAAS,CACPJ,EAAGD,EACHG,EAAGd,EAAUc,EAAIb,EAASzD,QAE5B,MACF,IAAK,SACHwE,EAAS,CACPJ,EAAGD,EACHG,EAAGd,EAAUc,EAAId,EAAUxD,QAE7B,MACF,IAAK,QACHwE,EAAS,CACPJ,EAAGZ,EAAUY,EAAIZ,EAAUzD,MAC3BuE,EAAGD,GAEL,MACF,IAAK,OACHG,EAAS,CACPJ,EAAGZ,EAAUY,EAAIX,EAAS1D,MAC1BuE,EAAGD,GAEL,MACF,QACEG,EAAS,CACPJ,EAAGZ,EAAUY,EACbE,EAAGd,EAAUc,GAGnB,QAAQG,EAAAA,EAAAA,IAAanB,IACnB,IAAK,QACHkB,EAAOZ,IAAkBW,GAAehB,GAAOW,GAAc,EAAI,GACjE,MACF,IAAK,MACHM,EAAOZ,IAAkBW,GAAehB,GAAOW,GAAc,EAAI,GAGrE,OAAOM,CACT,CAqGAE,eAAeC,EAAeC,EAAOtI,GACnC,IAAIuI,OACY,IAAZvI,IACFA,EAAU,CAAC,GAEb,MAAM,EACJ8H,EAAC,EACDE,EAAC,SACDQ,EAAQ,MACRC,EAAK,SACL1I,EAAQ,SACR2I,GACEJ,GACE,SACJK,EAAW,oBAAmB,aAC9BC,EAAe,WAAU,eACzBC,EAAiB,WAAU,YAC3BC,GAAc,EAAK,QACnBC,EAAU,IACRC,EAAAA,EAAAA,IAAShJ,EAASsI,GAChBW,GAAgBC,EAAAA,EAAAA,IAAiBH,GAEjCtK,EAAUsB,EAAS+I,EADa,aAAnBD,EAAgC,YAAc,WACbA,GAC9CM,GAAqBC,EAAAA,EAAAA,UAAuBZ,EAASa,gBAAgB,CACzE5K,QAAiH,OAAtG8J,QAAqD,MAAtBC,EAASc,eAAoB,EAASd,EAASc,UAAU7K,MAAqB8J,EAAgC9J,EAAUA,EAAQ8K,sBAAyD,MAA/Bf,EAASgB,wBAA6B,EAAShB,EAASgB,mBAAmBzJ,EAASoH,WACxRwB,WACAC,eACAF,cAEIe,EAA0B,aAAnBZ,EAAgC,CAC3Cf,IACAE,IACAvE,MAAOgF,EAAMtB,SAAS1D,MACtBC,OAAQ+E,EAAMtB,SAASzD,QACrB+E,EAAMvB,UACJwC,QAAkD,MAA5BlB,EAASmB,qBAA0B,EAASnB,EAASmB,gBAAgB5J,EAASoH,WACpGyC,QAA4C,MAAtBpB,EAASc,eAAoB,EAASd,EAASc,UAAUI,WAA+C,MAArBlB,EAASqB,cAAmB,EAASrB,EAASqB,SAASH,KAGlK,CACF5B,EAAG,EACHE,EAAG,GAEC8B,GAAoBV,EAAAA,EAAAA,IAAiBZ,EAASuB,4DAA8DvB,EAASuB,sDAAsD,CAC/KhK,WACA0J,OACAC,eACAhB,aACGe,GACL,MAAO,CACLO,KAAMb,EAAmBa,IAAMF,EAAkBE,IAAMf,EAAce,KAAOJ,EAAY5B,EACxFiC,QAASH,EAAkBG,OAASd,EAAmBc,OAAShB,EAAcgB,QAAUL,EAAY5B,EACpGkC,MAAOf,EAAmBe,KAAOJ,EAAkBI,KAAOjB,EAAciB,MAAQN,EAAY9B,EAC5FqC,OAAQL,EAAkBK,MAAQhB,EAAmBgB,MAAQlB,EAAckB,OAASP,EAAY9B,EAEpG,CA8SA,SAASsC,EAAeC,EAAUZ,GAChC,MAAO,CACLO,IAAKK,EAASL,IAAMP,EAAK/F,OACzByG,MAAOE,EAASF,MAAQV,EAAKhG,MAC7BwG,OAAQI,EAASJ,OAASR,EAAK/F,OAC/BwG,KAAMG,EAASH,KAAOT,EAAKhG,MAE/B,CACA,SAAS6G,EAAsBD,GAC7B,OAAOE,EAAAA,GAAMjF,MAAKoC,GAAQ2C,EAAS3C,IAAS,GAC9C,CA2DA,SAAS8C,EAAgB/B,GACvB,MAAMgC,GAAOC,EAAAA,EAAAA,OAAOjC,EAAMkC,KAAIlB,GAAQA,EAAKS,QACrCU,GAAOF,EAAAA,EAAAA,OAAOjC,EAAMkC,KAAIlB,GAAQA,EAAKO,OAG3C,MAAO,CACLlC,EAAG2C,EACHzC,EAAG4C,EACHnH,OALWoH,EAAAA,EAAAA,OAAOpC,EAAMkC,KAAIlB,GAAQA,EAAKU,SAK3BM,EACd/G,QALWmH,EAAAA,EAAAA,OAAOpC,EAAMkC,KAAIlB,GAAQA,EAAKQ,UAK1BW,EAEnB,eC9kBA,SAASE,EAAiBrM,GACxB,MAAMsM,GAAMjH,EAAAA,EAAAA,IAAiBrF,GAG7B,IAAIgF,EAAQuH,WAAWD,EAAItH,QAAU,EACjCC,EAASsH,WAAWD,EAAIrH,SAAW,EACvC,MAAMuH,GAAYC,EAAAA,EAAAA,IAAczM,GAC1B0M,EAAcF,EAAYxM,EAAQ0M,YAAc1H,EAChD2H,EAAeH,EAAYxM,EAAQ2M,aAAe1H,EAClD2H,GAAiBC,EAAAA,EAAAA,IAAM7H,KAAW0H,IAAeG,EAAAA,EAAAA,IAAM5H,KAAY0H,EAKzE,OAJIC,IACF5H,EAAQ0H,EACRzH,EAAS0H,GAEJ,CACL3H,QACAC,SACA6H,EAAGF,EAEP,CAEA,SAASG,EAAc/M,GACrB,OAAQ6K,EAAAA,EAAAA,IAAU7K,GAAoCA,EAAzBA,EAAQ8K,cACvC,CAEA,SAASM,EAASpL,GAChB,MAAMgN,EAAaD,EAAc/M,GACjC,KAAKyM,EAAAA,EAAAA,IAAcO,GACjB,OAAOC,EAAAA,EAAAA,IAAa,GAEtB,MAAMjC,EAAOgC,EAAWjI,yBAClB,MACJC,EAAK,OACLC,EAAM,EACN6H,GACET,EAAiBW,GACrB,IAAI3D,GAAKyD,GAAID,EAAAA,EAAAA,IAAM7B,EAAKhG,OAASgG,EAAKhG,OAASA,EAC3CuE,GAAKuD,GAAID,EAAAA,EAAAA,IAAM7B,EAAK/F,QAAU+F,EAAK/F,QAAUA,EAUjD,OANKoE,GAAM6D,OAAOC,SAAS9D,KACzBA,EAAI,GAEDE,GAAM2D,OAAOC,SAAS5D,KACzBA,EAAI,GAEC,CACLF,IACAE,IAEJ,CAEA,MAAM6D,GAAyBH,EAAAA,EAAAA,IAAa,GAC5C,SAASI,EAAiBrN,GACxB,MAAMsN,GAAMC,EAAAA,EAAAA,IAAUvN,GACtB,OAAKwN,EAAAA,EAAAA,OAAeF,EAAIG,eAGjB,CACLpE,EAAGiE,EAAIG,eAAeC,WACtBnE,EAAG+D,EAAIG,eAAeE,WAJfP,CAMX,CAWA,SAASrI,EAAsB/E,EAAS4N,EAAcC,EAAiB5C,QAChD,IAAjB2C,IACFA,GAAe,QAEO,IAApBC,IACFA,GAAkB,GAEpB,MAAMC,EAAa9N,EAAQ+E,wBACrBiI,EAAaD,EAAc/M,GACjC,IAAI+N,GAAQd,EAAAA,EAAAA,IAAa,GACrBW,IACE3C,GACEJ,EAAAA,EAAAA,IAAUI,KACZ8C,EAAQ3C,EAASH,IAGnB8C,EAAQ3C,EAASpL,IAGrB,MAAMgO,EA7BR,SAAgChO,EAASiO,EAASC,GAIhD,YAHgB,IAAZD,IACFA,GAAU,MAEPC,GAAwBD,GAAWC,KAAyBX,EAAAA,EAAAA,IAAUvN,KAGpEiO,CACT,CAqBwBE,CAAuBnB,EAAYa,EAAiB5C,GAAgBoC,EAAiBL,IAAcC,EAAAA,EAAAA,IAAa,GACtI,IAAI5D,GAAKyE,EAAWrC,KAAOuC,EAAc3E,GAAK0E,EAAM1E,EAChDE,GAAKuE,EAAWvC,IAAMyC,EAAczE,GAAKwE,EAAMxE,EAC/CvE,EAAQ8I,EAAW9I,MAAQ+I,EAAM1E,EACjCpE,EAAS6I,EAAW7I,OAAS8I,EAAMxE,EACvC,GAAIyD,EAAY,CACd,MAAMM,GAAMC,EAAAA,EAAAA,IAAUP,GAChBoB,EAAYnD,IAAgBJ,EAAAA,EAAAA,IAAUI,IAAgBsC,EAAAA,EAAAA,IAAUtC,GAAgBA,EACtF,IAAIoD,EAAaf,EACbgB,EAAgBD,EAAWE,aAC/B,KAAOD,GAAiBrD,GAAgBmD,IAAcC,GAAY,CAChE,MAAMG,EAAcpD,EAASkD,GACvBG,EAAaH,EAAcvJ,wBAC3BuH,GAAMjH,EAAAA,EAAAA,IAAiBiJ,GACvB7C,EAAOgD,EAAWhD,MAAQ6C,EAAcI,WAAanC,WAAWD,EAAIqC,cAAgBH,EAAYnF,EAChGkC,EAAMkD,EAAWlD,KAAO+C,EAAcM,UAAYrC,WAAWD,EAAIuC,aAAeL,EAAYjF,EAClGF,GAAKmF,EAAYnF,EACjBE,GAAKiF,EAAYjF,EACjBvE,GAASwJ,EAAYnF,EACrBpE,GAAUuJ,EAAYjF,EACtBF,GAAKoC,EACLlC,GAAKgC,EACL8C,GAAad,EAAAA,EAAAA,IAAUe,GACvBA,EAAgBD,EAAWE,YAC7B,CACF,CACA,OAAO5D,EAAAA,EAAAA,IAAiB,CACtB3F,QACAC,SACAoE,IACAE,KAEJ,CAEA,MAAMuF,EAAoB,CAAC,gBAAiB,UAC5C,SAASC,EAAW/O,GAClB,OAAO8O,EAAkBjI,MAAKmI,IAC5B,IACE,OAAOhP,EAAQL,QAAQqP,EACzB,CAAE,MAAOC,GACP,OAAO,CACT,IAEJ,CA6CA,SAASC,EAAoBlP,GAG3B,OAAO+E,GAAsBgG,EAAAA,EAAAA,IAAmB/K,IAAUyL,MAAO0D,EAAAA,EAAAA,IAAcnP,GAASoP,UAC1F,CAiEA,SAASC,EAAkCrP,EAASsP,EAAkBrF,GACpE,IAAIe,EACJ,GAAyB,aAArBsE,EACFtE,EA7CJ,SAAyBhL,EAASiK,GAChC,MAAMqD,GAAMC,EAAAA,EAAAA,IAAUvN,GAChBuP,GAAOxE,EAAAA,EAAAA,IAAmB/K,GAC1ByN,EAAiBH,EAAIG,eAC3B,IAAIzI,EAAQuK,EAAKC,YACbvK,EAASsK,EAAKE,aACdpG,EAAI,EACJE,EAAI,EACR,GAAIkE,EAAgB,CAClBzI,EAAQyI,EAAezI,MACvBC,EAASwI,EAAexI,OACxB,MAAMyK,GAAsBlC,EAAAA,EAAAA,QACvBkC,GAAuBA,GAAoC,UAAbzF,KACjDZ,EAAIoE,EAAeC,WACnBnE,EAAIkE,EAAeE,UAEvB,CACA,MAAO,CACL3I,QACAC,SACAoE,IACAE,IAEJ,CAsBWoG,CAAgB3P,EAASiK,QAC3B,GAAyB,aAArBqF,EACTtE,EAlEJ,SAAyBhL,GACvB,MAAMuP,GAAOxE,EAAAA,EAAAA,IAAmB/K,GAC1B4P,GAAST,EAAAA,EAAAA,IAAcnP,GACvB6P,EAAO7P,EAAQG,cAAc0P,KAC7B7K,GAAQoH,EAAAA,EAAAA,IAAImD,EAAKO,YAAaP,EAAKC,YAAaK,EAAKC,YAAaD,EAAKL,aACvEvK,GAASmH,EAAAA,EAAAA,IAAImD,EAAKQ,aAAcR,EAAKE,aAAcI,EAAKE,aAAcF,EAAKJ,cACjF,IAAIpG,GAAKuG,EAAOR,WAAaF,EAAoBlP,GACjD,MAAMuJ,GAAKqG,EAAOI,UAIlB,MAHyC,SAArC3K,EAAAA,EAAAA,IAAiBwK,GAAMI,YACzB5G,IAAK+C,EAAAA,EAAAA,IAAImD,EAAKC,YAAaK,EAAKL,aAAexK,GAE1C,CACLA,QACAC,SACAoE,IACAE,IAEJ,CAiDW2G,EAAgBnF,EAAAA,EAAAA,IAAmB/K,SACrC,IAAI6K,EAAAA,EAAAA,IAAUyE,GACnBtE,EAvBJ,SAAoChL,EAASiK,GAC3C,MAAM6D,EAAa/I,EAAsB/E,GAAS,EAAmB,UAAbiK,GAClDsB,EAAMuC,EAAWvC,IAAMvL,EAAQ4O,UAC/BnD,EAAOqC,EAAWrC,KAAOzL,EAAQ0O,WACjCX,GAAQtB,EAAAA,EAAAA,IAAczM,GAAWoL,EAASpL,IAAWiN,EAAAA,EAAAA,IAAa,GAKxE,MAAO,CACLjI,MALYhF,EAAQwP,YAAczB,EAAM1E,EAMxCpE,OALajF,EAAQyP,aAAe1B,EAAMxE,EAM1CF,EALQoC,EAAOsC,EAAM1E,EAMrBE,EALQgC,EAAMwC,EAAMxE,EAOxB,CAQW4G,CAA2Bb,EAAkBrF,OAC/C,CACL,MAAM+D,EAAgBX,EAAiBrN,GACvCgL,EAAO,IACFsE,EACHjG,EAAGiG,EAAiBjG,EAAI2E,EAAc3E,EACtCE,EAAG+F,EAAiB/F,EAAIyE,EAAczE,EAE1C,CACA,OAAOoB,EAAAA,EAAAA,IAAiBK,EAC1B,CACA,SAASoF,EAAyBpQ,EAASqQ,GACzC,MAAM3P,GAAa4P,EAAAA,EAAAA,IAActQ,GACjC,QAAIU,IAAe2P,KAAaxF,EAAAA,EAAAA,IAAUnK,KAAe6P,EAAAA,EAAAA,IAAsB7P,MAG9B,WAA1C2E,EAAAA,EAAAA,IAAiB3E,GAAY8P,UAAwBJ,EAAyB1P,EAAY2P,GACnG,CA2EA,SAASI,EAA8BzQ,EAASiL,EAAchB,GAC5D,MAAMyG,GAA0BjE,EAAAA,EAAAA,IAAcxB,GACxC0F,GAAkB5F,EAAAA,EAAAA,IAAmBE,GACrCgD,EAAuB,UAAbhE,EACVe,EAAOjG,EAAsB/E,GAAS,EAAMiO,EAAShD,GAC3D,IAAI2E,EAAS,CACXR,WAAY,EACZY,UAAW,GAEb,MAAMY,GAAU3D,EAAAA,EAAAA,IAAa,GAC7B,GAAIyD,IAA4BA,IAA4BzC,EAI1D,IAHkC,UAA9B4C,EAAAA,EAAAA,IAAY5F,KAA4B6F,EAAAA,EAAAA,IAAkBH,MAC5Df,GAAST,EAAAA,EAAAA,IAAclE,IAErByF,EAAyB,CAC3B,MAAMK,EAAahM,EAAsBkG,GAAc,EAAMgD,EAAShD,GACtE2F,EAAQvH,EAAI0H,EAAW1H,EAAI4B,EAAayD,WACxCkC,EAAQrH,EAAIwH,EAAWxH,EAAI0B,EAAa2D,SAC1C,MAAW+B,IACTC,EAAQvH,EAAI6F,EAAoByB,IAKpC,MAAO,CACLtH,EAHQ2B,EAAKS,KAAOmE,EAAOR,WAAawB,EAAQvH,EAIhDE,EAHQyB,EAAKO,IAAMqE,EAAOI,UAAYY,EAAQrH,EAI9CvE,MAAOgG,EAAKhG,MACZC,OAAQ+F,EAAK/F,OAEjB,CAEA,SAAS+L,EAAmBhR,GAC1B,MAA8C,YAAvCqF,EAAAA,EAAAA,IAAiBrF,GAASwQ,QACnC,CAEA,SAASS,EAAoBjR,EAASkR,GACpC,OAAKzE,EAAAA,EAAAA,IAAczM,IAAmD,WAAvCqF,EAAAA,EAAAA,IAAiBrF,GAASwQ,SAGrDU,EACKA,EAASlR,GAEXA,EAAQiL,aALN,IAMX,CAIA,SAASC,EAAgBlL,EAASkR,GAChC,MAAM5D,GAAMC,EAAAA,EAAAA,IAAUvN,GACtB,GAAI+O,EAAW/O,GACb,OAAOsN,EAET,KAAKb,EAAAA,EAAAA,IAAczM,GAAU,CAC3B,IAAImR,GAAkBb,EAAAA,EAAAA,IAActQ,GACpC,KAAOmR,KAAoBZ,EAAAA,EAAAA,IAAsBY,IAAkB,CACjE,IAAItG,EAAAA,EAAAA,IAAUsG,KAAqBH,EAAmBG,GACpD,OAAOA,EAETA,GAAkBb,EAAAA,EAAAA,IAAca,EAClC,CACA,OAAO7D,CACT,CACA,IAAIrC,EAAegG,EAAoBjR,EAASkR,GAChD,KAAOjG,IAAgBmG,EAAAA,EAAAA,IAAenG,IAAiB+F,EAAmB/F,IACxEA,EAAegG,EAAoBhG,EAAciG,GAEnD,OAAIjG,IAAgBsF,EAAAA,EAAAA,IAAsBtF,IAAiB+F,EAAmB/F,MAAkBoG,EAAAA,EAAAA,IAAkBpG,GACzGqC,EAEFrC,IAAgBqG,EAAAA,EAAAA,IAAmBtR,IAAYsN,CACxD,CAqBA,MAAMvD,EAAW,CACfuB,sDAhTF,SAA+DnG,GAC7D,IAAI,SACF7D,EAAQ,KACR0J,EAAI,aACJC,EAAY,SACZhB,GACE9E,EACJ,MAAM8I,EAAuB,UAAbhE,EACV0G,GAAkB5F,EAAAA,EAAAA,IAAmBE,GACrCsG,IAAWjQ,GAAWyN,EAAWzN,EAASoH,UAChD,GAAIuC,IAAiB0F,GAAmBY,GAAYtD,EAClD,OAAOjD,EAET,IAAI4E,EAAS,CACXR,WAAY,EACZY,UAAW,GAETjC,GAAQd,EAAAA,EAAAA,IAAa,GACzB,MAAM2D,GAAU3D,EAAAA,EAAAA,IAAa,GACvByD,GAA0BjE,EAAAA,EAAAA,IAAcxB,GAC9C,IAAIyF,IAA4BA,IAA4BzC,MACxB,UAA9B4C,EAAAA,EAAAA,IAAY5F,KAA4B6F,EAAAA,EAAAA,IAAkBH,MAC5Df,GAAST,EAAAA,EAAAA,IAAclE,KAErBwB,EAAAA,EAAAA,IAAcxB,IAAe,CAC/B,MAAM8F,EAAahM,EAAsBkG,GACzC8C,EAAQ3C,EAASH,GACjB2F,EAAQvH,EAAI0H,EAAW1H,EAAI4B,EAAayD,WACxCkC,EAAQrH,EAAIwH,EAAWxH,EAAI0B,EAAa2D,SAC1C,CAEF,MAAO,CACL5J,MAAOgG,EAAKhG,MAAQ+I,EAAM1E,EAC1BpE,OAAQ+F,EAAK/F,OAAS8I,EAAMxE,EAC5BF,EAAG2B,EAAK3B,EAAI0E,EAAM1E,EAAIuG,EAAOR,WAAarB,EAAM1E,EAAIuH,EAAQvH,EAC5DE,EAAGyB,EAAKzB,EAAIwE,EAAMxE,EAAIqG,EAAOI,UAAYjC,EAAMxE,EAAIqH,EAAQrH,EAE/D,EA4QEwB,mBAAkB,KAClBH,gBApIF,SAAyBzF,GACvB,IAAI,QACFnF,EAAO,SACPkK,EAAQ,aACRC,EAAY,SACZF,GACE9E,EACJ,MACMqM,EAAoB,IADoB,sBAAbtH,EAAmC6E,EAAW/O,GAAW,GAxC5F,SAAqCA,EAASyR,GAC5C,MAAMC,EAAeD,EAAME,IAAI3R,GAC/B,GAAI0R,EACF,OAAOA,EAET,IAAIE,GAASC,EAAAA,EAAAA,IAAqB7R,EAAS,IAAI,GAAOc,QAAOF,IAAMiK,EAAAA,EAAAA,IAAUjK,IAA2B,UAApBiQ,EAAAA,EAAAA,IAAYjQ,KAC5FkR,EAAsC,KAC1C,MAAMC,EAAwD,WAAvC1M,EAAAA,EAAAA,IAAiBrF,GAASwQ,SACjD,IAAIwB,EAAcD,GAAiBzB,EAAAA,EAAAA,IAActQ,GAAWA,EAG5D,MAAO6K,EAAAA,EAAAA,IAAUmH,MAAiBzB,EAAAA,EAAAA,IAAsByB,IAAc,CACpE,MAAMC,GAAgB5M,EAAAA,EAAAA,IAAiB2M,GACjCE,GAA0Bb,EAAAA,EAAAA,IAAkBW,GAC7CE,GAAsD,UAA3BD,EAAczB,WAC5CsB,EAAsC,OAEVC,GAAkBG,IAA4BJ,GAAuCI,GAAsD,WAA3BD,EAAczB,UAA2BsB,GAAuC,CAAC,WAAY,SAAS1P,SAAS0P,EAAoCtB,YAAaM,EAAAA,EAAAA,IAAkBkB,KAAiBE,GAA2B9B,EAAyBpQ,EAASgS,IAG5YJ,EAASA,EAAO9Q,QAAOqR,GAAYA,IAAaH,IAGhDF,EAAsCG,EAExCD,GAAc1B,EAAAA,EAAAA,IAAc0B,EAC9B,CAEA,OADAP,EAAMW,IAAIpS,EAAS4R,GACZA,CACT,CAWiGS,CAA4BrS,EAASsS,KAAKC,IAAM,GAAGtK,OAAOiC,GACjGC,GAClDqI,EAAwBhB,EAAkB,GAC1CiB,EAAejB,EAAkB1J,QAAO,CAAC4K,EAASpD,KACtD,MAAMtE,EAAOqE,EAAkCrP,EAASsP,EAAkBrF,GAK1E,OAJAyI,EAAQnH,KAAMa,EAAAA,EAAAA,IAAIpB,EAAKO,IAAKmH,EAAQnH,KACpCmH,EAAQhH,OAAQO,EAAAA,EAAAA,IAAIjB,EAAKU,MAAOgH,EAAQhH,OACxCgH,EAAQlH,QAASS,EAAAA,EAAAA,IAAIjB,EAAKQ,OAAQkH,EAAQlH,QAC1CkH,EAAQjH,MAAOW,EAAAA,EAAAA,IAAIpB,EAAKS,KAAMiH,EAAQjH,MAC/BiH,CAAO,GACbrD,EAAkCrP,EAASwS,EAAuBvI,IACrE,MAAO,CACLjF,MAAOyN,EAAa/G,MAAQ+G,EAAahH,KACzCxG,OAAQwN,EAAajH,OAASiH,EAAalH,IAC3ClC,EAAGoJ,EAAahH,KAChBlC,EAAGkJ,EAAalH,IAEpB,EA6GEL,kBACAyH,gBAxBsBhJ,eAAgBiJ,GACtC,MAAMC,EAAoBP,KAAKpH,iBAAmBA,EAC5C4H,EAAkBR,KAAKS,cACvBC,QAA2BF,EAAgBF,EAAKlK,UACtD,MAAO,CACLD,UAAWgI,EAA8BmC,EAAKnK,gBAAiBoK,EAAkBD,EAAKlK,UAAWkK,EAAK3I,UACtGvB,SAAU,CACRW,EAAG,EACHE,EAAG,EACHvE,MAAOgO,EAAmBhO,MAC1BC,OAAQ+N,EAAmB/N,QAGjC,EAYEwB,eA9QF,SAAwBzG,GACtB,OAAOgB,MAAMS,KAAKzB,EAAQyG,iBAC5B,EA6QEsM,cA9GF,SAAuB/S,GACrB,MAAM,MACJgF,EAAK,OACLC,GACEoH,EAAiBrM,GACrB,MAAO,CACLgF,QACAC,SAEJ,EAsGEmG,WACAP,UAAS,KACToI,MAdF,SAAejT,GACb,MAA+C,SAAxCqF,EAAAA,EAAAA,IAAiBrF,GAASiQ,SACnC,GAoGA,SAASiD,EAAWzK,EAAWC,EAAUyK,EAAQ5R,QAC/B,IAAZA,IACFA,EAAU,CAAC,GAEb,MAAM,eACJ6R,GAAiB,EAAI,eACrBC,GAAiB,EAAI,cACrBC,EAA0C,oBAAnBC,eAA6B,YACpDC,EAA8C,oBAAzBC,qBAAmC,eACxDC,GAAiB,GACfnS,EACEoS,EAAc5G,EAActE,GAC5BmL,EAAYR,GAAkBC,EAAiB,IAAKM,GAAc9B,EAAAA,EAAAA,IAAqB8B,GAAe,OAAQ9B,EAAAA,EAAAA,IAAqBnJ,IAAa,GACtJkL,EAAUpM,SAAQ2K,IAChBiB,GAAkBjB,EAAS0B,iBAAiB,SAAUV,EAAQ,CAC5DW,SAAS,IAEXT,GAAkBlB,EAAS0B,iBAAiB,SAAUV,EAAO,IAE/D,MAAMY,EAAYJ,GAAeH,EAvGnC,SAAqBxT,EAASgU,GAC5B,IACIC,EADAC,EAAK,KAET,MAAMC,GAAOpJ,EAAAA,EAAAA,IAAmB/K,GAChC,SAASoU,IACP,IAAIC,EACJC,aAAaL,GACC,OAAbI,EAAMH,IAAeG,EAAIE,aAC1BL,EAAK,IACP,CAgEA,OA/DA,SAASM,EAAQC,EAAMC,QACR,IAATD,IACFA,GAAO,QAES,IAAdC,IACFA,EAAY,GAEdN,IACA,MAAM,KACJ3I,EAAI,IACJF,EAAG,MACHvG,EAAK,OACLC,GACEjF,EAAQ+E,wBAIZ,GAHK0P,GACHT,KAEGhP,IAAUC,EACb,OAEF,MAKM1D,EAAU,CACdoT,aANeC,EAAAA,EAAAA,IAAMrJ,GAIQ,QAHZqJ,EAAAA,EAAAA,IAAMT,EAAK3E,aAAe/D,EAAOzG,IAGC,QAFjC4P,EAAAA,EAAAA,IAAMT,EAAK1E,cAAgBlE,EAAMtG,IAEuB,QAD1D2P,EAAAA,EAAAA,IAAMnJ,GACyE,KAG/FiJ,WAAWtI,EAAAA,EAAAA,IAAI,GAAGH,EAAAA,EAAAA,IAAI,EAAGyI,KAAe,GAE1C,IAAIG,GAAgB,EACpB,SAASC,EAAcC,GACrB,MAAMC,EAAQD,EAAQ,GAAGE,kBACzB,GAAID,IAAUN,EAAW,CACvB,IAAKG,EACH,OAAOL,IAEJQ,EAOHR,GAAQ,EAAOQ,GAJff,EAAYiB,YAAW,KACrBV,GAAQ,EAAO,KAAK,GACnB,IAIP,CACAK,GAAgB,CAClB,CAIA,IACEX,EAAK,IAAIT,qBAAqBqB,EAAe,IACxCvT,EAEH4S,KAAMA,EAAKhU,eAEf,CAAE,MAAO8O,GACPiF,EAAK,IAAIT,qBAAqBqB,EAAevT,EAC/C,CACA2S,EAAGiB,QAAQnV,EACb,CACAwU,EAAQ,GACDJ,CACT,CA6BiDgB,CAAYzB,EAAaR,GAAU,KAClF,IAsBIkC,EAtBAC,GAAkB,EAClBC,EAAiB,KACjBjC,IACFiC,EAAiB,IAAIhC,gBAAepO,IAClC,IAAKqQ,GAAcrQ,EACfqQ,GAAcA,EAAWC,SAAW9B,GAAe4B,IAGrDA,EAAeG,UAAUhN,GACzBiN,qBAAqBL,GACrBA,EAAiBM,uBAAsB,KACrC,IAAIC,EACkC,OAArCA,EAAkBN,IAA2BM,EAAgBV,QAAQzM,EAAS,KAGnFyK,GAAQ,IAENQ,IAAgBD,GAClB6B,EAAeJ,QAAQxB,GAEzB4B,EAAeJ,QAAQzM,IAGzB,IAAIoN,EAAcpC,EAAiB3O,EAAsB0D,GAAa,KAatE,OAZIiL,GAGJ,SAASqC,IACP,MAAMC,EAAcjR,EAAsB0D,IACtCqN,GAAgBE,EAAY3M,IAAMyM,EAAYzM,GAAK2M,EAAYzM,IAAMuM,EAAYvM,GAAKyM,EAAYhR,QAAU8Q,EAAY9Q,OAASgR,EAAY/Q,SAAW6Q,EAAY7Q,QACtKkO,IAEF2C,EAAcE,EACdX,EAAUO,sBAAsBG,EAClC,CATEA,GAUF5C,IACO,KACL,IAAI8C,EACJrC,EAAUpM,SAAQ2K,IAChBiB,GAAkBjB,EAAS+D,oBAAoB,SAAU/C,GACzDE,GAAkBlB,EAAS+D,oBAAoB,SAAU/C,EAAO,IAErD,MAAbY,GAAqBA,IACkB,OAAtCkC,EAAmBV,IAA2BU,EAAiB1B,aAChEgB,EAAiB,KACb7B,GACFiC,qBAAqBN,EACvB,CAEJ,CAUA,MAAMzL,EAAiBuM,EASjBC,EDsIS,SAAU7U,GAIvB,YAHgB,IAAZA,IACFA,EAAU,GAEL,CACLqC,KAAM,SACNrC,UACA,QAAM8U,CAAGxM,GACP,IAAIyM,EAAuBC,EAC3B,MAAM,EACJlN,EAAC,EACDE,EAAC,UACDhB,EAAS,eACTiO,GACE3M,EACE4M,QA/DZ9M,eAAoCE,EAAOtI,GACzC,MAAM,UACJgH,EAAS,SACTwB,EAAQ,SACRzI,GACEuI,EACErB,QAA+B,MAAlBuB,EAASkJ,WAAgB,EAASlJ,EAASkJ,MAAM3R,EAASoH,WACvEO,GAAOC,EAAAA,EAAAA,IAAQX,GACfmO,GAAYhN,EAAAA,EAAAA,IAAanB,GACzBY,EAAwC,OAA3BP,EAAAA,EAAAA,IAAYL,GACzBoO,EAAgB,CAAC,OAAQ,OAAOvU,SAAS6G,IAAS,EAAI,EACtD2N,EAAiBpO,GAAOW,GAAc,EAAI,EAC1C0N,GAAWtM,EAAAA,EAAAA,IAAShJ,EAASsI,GAGnC,IAAI,SACFiN,EAAQ,UACRC,EAAS,cACTlO,GACsB,kBAAbgO,EAAwB,CACjCC,SAAUD,EACVE,UAAW,EACXlO,cAAe,MACb,CACFiO,SAAU,EACVC,UAAW,EACXlO,cAAe,QACZgO,GAKL,OAHIH,GAAsC,kBAAlB7N,IACtBkO,EAA0B,QAAdL,GAAuC,EAAjB7N,EAAqBA,GAElDM,EAAa,CAClBE,EAAG0N,EAAYH,EACfrN,EAAGuN,EAAWH,GACZ,CACFtN,EAAGyN,EAAWH,EACdpN,EAAGwN,EAAYH,EAEnB,CAwB+BI,CAAqBnN,EAAOtI,GAIrD,OAAIgH,KAAkE,OAAlD+N,EAAwBE,EAAeJ,aAAkB,EAASE,EAAsB/N,YAAgE,OAAjDgO,EAAwBC,EAAeS,QAAkBV,EAAsBW,gBACjM,CAAC,EAEH,CACL7N,EAAGA,EAAIoN,EAAWpN,EAClBE,EAAGA,EAAIkN,EAAWlN,EAClBqJ,KAAM,IACD6D,EACHlO,aAGN,EAEJ,EC9JM4O,EDxUgB,SAAU5V,GAI9B,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLqC,KAAM,gBACNrC,UACA,QAAM8U,CAAGxM,GACP,IAAIuN,EAAuBC,EAAwBC,EACnD,MAAM,MACJtN,EAAK,eACLwM,EAAc,UACdjO,EAAS,SACTwB,EAAQ,SACRzI,GACEuI,GACE,UACJkN,GAAY,EAAK,UACjBL,EAAS,kBACTa,EAAoBC,EAAAA,GAAU,cAC9BC,GAAgB,KACbC,IACDnN,EAAAA,EAAAA,IAAShJ,EAASsI,GAChB8N,OAA6BC,IAAdlB,GAA2Ba,IAAsBC,EAAAA,GAtC5E,SAA0Bd,EAAWe,EAAeF,GAElD,OAD2Cb,EAAY,IAAIa,EAAkBzW,QAAOyH,IAAamB,EAAAA,EAAAA,IAAanB,KAAemO,OAAea,EAAkBzW,QAAOyH,IAAamB,EAAAA,EAAAA,IAAanB,KAAemO,KAAca,EAAkBzW,QAAOyH,IAAaW,EAAAA,EAAAA,IAAQX,KAAeA,KAC/OzH,QAAOyH,IAC3CmO,IACKhN,EAAAA,EAAAA,IAAanB,KAAemO,KAAce,IAAgBI,EAAAA,EAAAA,IAA8BtP,KAAeA,GAIpH,CA8ByFuP,CAAiBpB,GAAa,KAAMe,EAAeF,GAAqBA,EACrJ3L,QAAiBhC,EAAeC,EAAO6N,GACvCK,GAA0E,OAAzDX,EAAwBZ,EAAeW,oBAAyB,EAASC,EAAsBY,QAAU,EAC1HC,EAAmBN,EAAaI,GACtC,GAAwB,MAApBE,EACF,MAAO,CAAC,EAEV,MAAMC,GAAiBC,EAAAA,EAAAA,IAAkBF,EAAkBjO,QAAgC,MAAlBD,EAASkJ,WAAgB,EAASlJ,EAASkJ,MAAM3R,EAASoH,YAGnI,GAAIH,IAAc0P,EAChB,MAAO,CACLG,MAAO,CACL7P,UAAWoP,EAAa,KAI9B,MAAMU,EAAmB,CAACzM,GAAS1C,EAAAA,EAAAA,IAAQ+O,IAAoBrM,EAASsM,EAAe,IAAKtM,EAASsM,EAAe,KAC9GI,EAAe,KAAiE,OAA1DjB,EAAyBb,EAAeW,oBAAyB,EAASE,EAAuBkB,YAAc,GAAK,CAC9IhQ,UAAW0P,EACXM,UAAWF,IAEPG,EAAgBb,EAAaI,EAAe,GAGlD,GAAIS,EACF,MAAO,CACL5F,KAAM,CACJoF,MAAOD,EAAe,EACtBQ,UAAWD,GAEbF,MAAO,CACL7P,UAAWiQ,IAIjB,MAAMC,EAA8BH,EAAapM,KAAIwM,IACnD,MAAMhC,GAAYhN,EAAAA,EAAAA,IAAagP,EAAEnQ,WACjC,MAAO,CAACmQ,EAAEnQ,UAAWmO,GAAaK,EAElC2B,EAAEH,UAAUtX,MAAM,EAAG,GAAG6G,QAAO,CAACC,EAAK4Q,IAAM5Q,EAAM4Q,GAAG,GAEpDD,EAAEH,UAAU,GAAIG,EAAEH,UAAU,IAC3B1Q,MAAK,CAACxE,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAKrBsV,GAA8E,OAA3DtB,EAJWmB,EAA4B3X,QAAO4X,GAAKA,EAAE,GAAGzX,MAAM,GAGvFyI,EAAAA,EAAAA,IAAagP,EAAE,IAAM,EAAI,GAAGG,OAAMF,GAAKA,GAAK,MACiC,SAAc,EAASrB,EAAsB,KAAOmB,EAA4B,GAAG,GAChK,OAAIG,IAAmBrQ,EACd,CACLqK,KAAM,CACJoF,MAAOD,EAAe,EACtBQ,UAAWD,GAEbF,MAAO,CACL7P,UAAWqQ,IAIV,CAAC,CACV,EAEJ,ECyPMjX,ED8JQ,SAAUJ,GAItB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLqC,KAAM,QACNrC,UACA,QAAM8U,CAAGxM,GACP,MAAM,EACJR,EAAC,EACDE,EAAC,UACDhB,GACEsB,GAEFiN,SAAUgC,GAAgB,EAC1B/B,UAAWgC,GAAiB,EAAK,QACjCC,EAAU,CACR3C,GAAIlR,IACF,IAAI,EACFkE,EAAC,EACDE,GACEpE,EACJ,MAAO,CACLkE,IACAE,IACD,MAGFmO,IACDnN,EAAAA,EAAAA,IAAShJ,EAASsI,GAChBJ,EAAS,CACbJ,IACAE,KAEIqC,QAAiBhC,EAAeC,EAAO6N,GACvCX,GAAYnO,EAAAA,EAAAA,KAAYM,EAAAA,EAAAA,IAAQX,IAChCuO,GAAWmC,EAAAA,EAAAA,IAAgBlC,GACjC,IAAImC,EAAgBzP,EAAOqN,GACvBqC,EAAiB1P,EAAOsN,GAC5B,GAAI+B,EAAe,CACjB,MACMM,EAAuB,MAAbtC,EAAmB,SAAW,QACxC7K,EAAMiN,EAAgBtN,EAFC,MAAbkL,EAAmB,MAAQ,QAGrC1K,EAAM8M,EAAgBtN,EAASwN,GACrCF,GAAgBG,EAAAA,EAAAA,IAAMpN,EAAKiN,EAAe9M,EAC5C,CACA,GAAI2M,EAAgB,CAClB,MACMK,EAAwB,MAAdrC,EAAoB,SAAW,QACzC9K,EAAMkN,EAAiBvN,EAFC,MAAdmL,EAAoB,MAAQ,QAGtC3K,EAAM+M,EAAiBvN,EAASwN,GACtCD,GAAiBE,EAAAA,EAAAA,IAAMpN,EAAKkN,EAAgB/M,EAC9C,CACA,MAAMkN,EAAgBN,EAAQ3C,GAAG,IAC5BxM,EACH,CAACiN,GAAWoC,EACZ,CAACnC,GAAYoC,IAEf,MAAO,IACFG,EACH1G,KAAM,CACJvJ,EAAGiQ,EAAcjQ,EAAIA,EACrBE,EAAG+P,EAAc/P,EAAIA,GAG3B,EAEJ,ECzNMgQ,EDzPO,SAAUhY,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLqC,KAAM,OACNrC,UACA,QAAM8U,CAAGxM,GACP,IAAI0M,EAAuBiD,EAC3B,MAAM,UACJjR,EAAS,eACTiO,EAAc,MACdxM,EAAK,iBACLyP,EAAgB,SAChB1P,EAAQ,SACRzI,GACEuI,GAEFiN,SAAUgC,GAAgB,EAC1B/B,UAAWgC,GAAiB,EAC5BW,mBAAoBC,EAA2B,iBAC/CC,EAAmB,UAAS,0BAC5BC,EAA4B,OAAM,cAClCC,GAAgB,KACbpC,IACDnN,EAAAA,EAAAA,IAAShJ,EAASsI,GAMtB,GAAsD,OAAjD0M,EAAwBC,EAAeS,QAAkBV,EAAsBW,gBAClF,MAAO,CAAC,EAEV,MAAMjO,GAAOC,EAAAA,EAAAA,IAAQX,GACfwR,GAAkB7Q,EAAAA,EAAAA,IAAQuQ,KAAsBA,EAChDjR,QAA+B,MAAlBuB,EAASkJ,WAAgB,EAASlJ,EAASkJ,MAAM3R,EAASoH,WACvEgR,EAAqBC,IAAgCI,IAAoBD,EAAgB,EAACE,EAAAA,EAAAA,IAAqBP,KAAqBQ,EAAAA,EAAAA,IAAsBR,IAC3JE,GAA6D,SAA9BE,GAClCH,EAAmBxX,SAAQgY,EAAAA,EAAAA,IAA0BT,EAAkBK,EAAeD,EAA2BrR,IAEnH,MAAMgP,EAAa,CAACiC,KAAqBC,GACnC9N,QAAiBhC,EAAeC,EAAO6N,GACvCa,EAAY,GAClB,IAAI4B,GAAiE,OAA/CX,EAAuBhD,EAAe+C,WAAgB,EAASC,EAAqBjB,YAAc,GAIxH,GAHIO,GACFP,EAAUrW,KAAK0J,EAAS3C,IAEtB8P,EAAgB,CAClB,MAAMjN,GAAQqM,EAAAA,EAAAA,IAAkB5P,EAAWyB,EAAOxB,GAClD+P,EAAUrW,KAAK0J,EAASE,EAAM,IAAKF,EAASE,EAAM,IACpD,CAOA,GANAqO,EAAgB,IAAIA,EAAe,CACjC5R,YACAgQ,eAIGA,EAAUM,OAAM5P,GAAQA,GAAQ,IAAI,CACvC,IAAImR,EAAuBC,EAC3B,MAAMC,IAA+D,OAAhDF,EAAwB5D,EAAe+C,WAAgB,EAASa,EAAsBpC,QAAU,GAAK,EACpHQ,EAAgBhB,EAAW8C,GACjC,GAAI9B,EAEF,MAAO,CACL5F,KAAM,CACJoF,MAAOsC,EACP/B,UAAW4B,GAEb/B,MAAO,CACL7P,UAAWiQ,IAOjB,IAAII,EAAgJ,OAA9HyB,EAAwBF,EAAcrZ,QAAO4X,GAAKA,EAAEH,UAAU,IAAM,IAAG1Q,MAAK,CAACxE,EAAGC,IAAMD,EAAEkV,UAAU,GAAKjV,EAAEiV,UAAU,KAAI,SAAc,EAAS8B,EAAsB9R,UAG1L,IAAKqQ,EACH,OAAQgB,GACN,IAAK,UACH,CACE,IAAIW,EACJ,MAAMhS,EAAyM,OAA5LgS,EAAwBJ,EAAcjO,KAAIwM,GAAK,CAACA,EAAEnQ,UAAWmQ,EAAEH,UAAUzX,QAAO8K,GAAYA,EAAW,IAAG9D,QAAO,CAACC,EAAK6D,IAAa7D,EAAM6D,GAAU,MAAK/D,MAAK,CAACxE,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAAI,SAAc,EAASiX,EAAsB,GACjPhS,IACFqQ,EAAiBrQ,GAEnB,KACF,CACF,IAAK,mBACHqQ,EAAiBa,EAIvB,GAAIlR,IAAcqQ,EAChB,MAAO,CACLR,MAAO,CACL7P,UAAWqQ,GAInB,CACA,MAAO,CAAC,CACV,EAEJ,ECsJM4B,ED6RO,SAAUjZ,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLqC,KAAM,OACNrC,UACA,QAAM8U,CAAGxM,GACP,MAAM,UACJtB,EAAS,MACTyB,EAAK,SACLD,EAAQ,SACRzI,GACEuI,GACE,MACJ3I,EAAQA,YACLwW,IACDnN,EAAAA,EAAAA,IAAShJ,EAASsI,GAChB+B,QAAiBhC,EAAeC,EAAO6N,GACvCzO,GAAOC,EAAAA,EAAAA,IAAQX,GACfmO,GAAYhN,EAAAA,EAAAA,IAAanB,GACzBkS,EAAqC,OAA3B7R,EAAAA,EAAAA,IAAYL,IACtB,MACJvD,EAAK,OACLC,GACE+E,EAAMtB,SACV,IAAIgS,EACAC,EACS,QAAT1R,GAA2B,WAATA,GACpByR,EAAazR,EACb0R,EAAYjE,WAAyC,MAAlB3M,EAASkJ,WAAgB,EAASlJ,EAASkJ,MAAM3R,EAASoH,WAAc,QAAU,OAAS,OAAS,UAEvIiS,EAAY1R,EACZyR,EAA2B,QAAdhE,EAAsB,MAAQ,UAE7C,MAAMkE,EAAwB3V,EAAS2G,EAASL,IAAMK,EAASJ,OACzDqP,EAAuB7V,EAAQ4G,EAASH,KAAOG,EAASF,MACxDoP,GAA0B7O,EAAAA,EAAAA,IAAIhH,EAAS2G,EAAS8O,GAAaE,GAC7DG,GAAyB9O,EAAAA,EAAAA,IAAIjH,EAAQ4G,EAAS+O,GAAYE,GAC1DG,GAAWnR,EAAM2M,eAAe7U,MACtC,IAAIsZ,EAAkBH,EAClBI,EAAiBH,EAMrB,GALIN,EACFS,EAAiBxE,GAAasE,GAAU/O,EAAAA,EAAAA,IAAI8O,EAAwBF,GAAwBA,EAE5FI,EAAkBvE,GAAasE,GAAU/O,EAAAA,EAAAA,IAAI6O,EAAyBF,GAAyBA,EAE7FI,IAAYtE,EAAW,CACzB,MAAMyE,GAAO/O,EAAAA,EAAAA,IAAIR,EAASH,KAAM,GAC1B2P,GAAOhP,EAAAA,EAAAA,IAAIR,EAASF,MAAO,GAC3B2P,GAAOjP,EAAAA,EAAAA,IAAIR,EAASL,IAAK,GACzB+P,GAAOlP,EAAAA,EAAAA,IAAIR,EAASJ,OAAQ,GAC9BiP,EACFS,EAAiBlW,EAAQ,GAAc,IAATmW,GAAuB,IAATC,EAAaD,EAAOC,GAAOhP,EAAAA,EAAAA,IAAIR,EAASH,KAAMG,EAASF,QAEnGuP,EAAkBhW,EAAS,GAAc,IAAToW,GAAuB,IAATC,EAAaD,EAAOC,GAAOlP,EAAAA,EAAAA,IAAIR,EAASL,IAAKK,EAASJ,QAExG,OACMtK,EAAM,IACP2I,EACHqR,iBACAD,oBAEF,MAAMM,QAAuBxR,EAASgJ,cAAczR,EAASoH,UAC7D,OAAI1D,IAAUuW,EAAevW,OAASC,IAAWsW,EAAetW,OACvD,CACLmT,MAAO,CACLpO,OAAO,IAIN,CAAC,CACV,EAEJ,EChWMwR,ED3IO,SAAUja,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLqC,KAAM,OACNrC,UACA,QAAM8U,CAAGxM,GACP,MAAM,MACJG,GACEH,GACE,SACJI,EAAW,qBACRyN,IACDnN,EAAAA,EAAAA,IAAShJ,EAASsI,GACtB,OAAQI,GACN,IAAK,kBACH,CACE,MAIM2G,EAAUjF,QAJO/B,EAAeC,EAAO,IACxC6N,EACHtN,eAAgB,cAEuBJ,EAAMvB,WAC/C,MAAO,CACLmK,KAAM,CACJ6I,uBAAwB7K,EACxB8K,gBAAiB7P,EAAsB+E,IAG7C,CACF,IAAK,UACH,CACE,MAIMA,EAAUjF,QAJO/B,EAAeC,EAAO,IACxC6N,EACHrN,aAAa,IAE0BL,EAAMtB,UAC/C,MAAO,CACLkK,KAAM,CACJ+I,eAAgB/K,EAChBgL,QAAS/P,EAAsB+E,IAGrC,CACF,QAEI,MAAO,CAAC,EAGhB,EAEJ,EC+FMqG,EDzcQ1V,IAAW,CACvBqC,KAAM,QACNrC,UACA,QAAM8U,CAAGxM,GACP,MAAM,EACJR,EAAC,EACDE,EAAC,UACDhB,EAAS,MACTyB,EAAK,SACLD,EAAQ,SACRzI,EAAQ,eACRkV,GACE3M,GAEE,QACJ7J,EAAO,QACPsK,EAAU,IACRC,EAAAA,EAAAA,IAAShJ,EAASsI,IAAU,CAAC,EACjC,GAAe,MAAX7J,EACF,MAAO,CAAC,EAEV,MAAMwK,GAAgBC,EAAAA,EAAAA,IAAiBH,GACjCb,EAAS,CACbJ,IACAE,KAEIsS,GAAO/S,EAAAA,EAAAA,IAAiBP,GACxB7G,GAASsH,EAAAA,EAAAA,IAAc6S,GACvBC,QAAwB/R,EAASgJ,cAAc/S,GAC/Cya,EAAmB,MAAToB,EACVE,EAAUtB,EAAU,MAAQ,OAC5BuB,EAAUvB,EAAU,SAAW,QAC/BwB,EAAaxB,EAAU,eAAiB,cACxCyB,EAAUlS,EAAMvB,UAAU/G,GAAUsI,EAAMvB,UAAUoT,GAAQpS,EAAOoS,GAAQ7R,EAAMtB,SAAShH,GAC1Fya,EAAY1S,EAAOoS,GAAQ7R,EAAMvB,UAAUoT,GAC3CO,QAAuD,MAA5BrS,EAASmB,qBAA0B,EAASnB,EAASmB,gBAAgBlL,IACtG,IAAIqc,EAAaD,EAAoBA,EAAkBH,GAAc,EAGhEI,SAA6C,MAAtBtS,EAASc,eAAoB,EAASd,EAASc,UAAUuR,MACnFC,EAAa/a,EAASoH,SAASuT,IAAejS,EAAMtB,SAAShH,IAE/D,MAAM4a,EAAoBJ,EAAU,EAAIC,EAAY,EAI9CI,EAAyBF,EAAa,EAAIP,EAAgBpa,GAAU,EAAI,EACxE8a,GAAavQ,EAAAA,EAAAA,IAAIzB,EAAcuR,GAAUQ,GACzCE,GAAaxQ,EAAAA,EAAAA,IAAIzB,EAAcwR,GAAUO,GAIzCG,EAAQF,EACRpQ,EAAMiQ,EAAaP,EAAgBpa,GAAU+a,EAC7CE,EAASN,EAAa,EAAIP,EAAgBpa,GAAU,EAAI4a,EACxDlG,GAASiD,EAAAA,EAAAA,IAAMqD,EAAOC,EAAQvQ,GAM9BwQ,GAAmBpG,EAAeS,OAAoC,OAA3BvN,EAAAA,EAAAA,IAAanB,IAAsBoU,IAAWvG,GAAUpM,EAAMvB,UAAU/G,GAAU,GAAKib,EAASD,EAAQF,EAAaC,GAAcX,EAAgBpa,GAAU,EAAI,EAC5MwV,EAAkB0F,EAAkBD,EAASD,EAAQC,EAASD,EAAQC,EAASvQ,EAAM,EAC3F,MAAO,CACL,CAACyP,GAAOpS,EAAOoS,GAAQ3E,EACvBtE,KAAM,CACJ,CAACiJ,GAAOzF,EACRyG,aAAcF,EAASvG,EAASc,KAC5B0F,GAAmB,CACrB1F,oBAGJkB,MAAOwE,EAEX,ICsYIE,EDpES,SAAUvb,GAIvB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLqC,KAAM,SACNrC,UACA,QAAM8U,CAAGxM,GACP,MAAM,UACJtB,EAAS,SACTjH,EAAQ,MACR0I,EAAK,SACLD,EAAQ,SACRE,GACEJ,GAIE,QACJS,EAAU,EAAC,EACXjB,EAAC,EACDE,IACEgB,EAAAA,EAAAA,IAAShJ,EAASsI,GAChBkT,EAAoB/b,MAAMS,WAAwC,MAA3BsI,EAAStD,oBAAyB,EAASsD,EAAStD,eAAenF,EAASmH,aAAgB,IACnIuU,EA5CZ,SAAwBhT,GACtB,MAAMiT,EAAcjT,EAAM/I,QAAQ4G,MAAK,CAACxE,EAAGC,IAAMD,EAAEkG,EAAIjG,EAAEiG,IACnD2T,EAAS,GACf,IAAIC,EAAW,KACf,IAAK,IAAIzY,EAAI,EAAGA,EAAIuY,EAAYvb,OAAQgD,IAAK,CAC3C,MAAMsG,EAAOiS,EAAYvY,IACpByY,GAAYnS,EAAKzB,EAAI4T,EAAS5T,EAAI4T,EAASlY,OAAS,EACvDiY,EAAOhb,KAAK,CAAC8I,IAEbkS,EAAOA,EAAOxb,OAAS,GAAGQ,KAAK8I,GAEjCmS,EAAWnS,CACb,CACA,OAAOkS,EAAOhR,KAAIlB,IAAQL,EAAAA,EAAAA,IAAiBoB,EAAgBf,KAC7D,CA8B0BoS,CAAeL,GAC7BM,GAAW1S,EAAAA,EAAAA,IAAiBoB,EAAgBgR,IAC5CvS,GAAgBC,EAAAA,EAAAA,IAAiBH,GAsDvC,MAAMgT,QAAmBvT,EAAS4I,gBAAgB,CAChDlK,UAAW,CACT1D,sBAvDJ,WAEE,GAA2B,IAAvBiY,EAAYtb,QAAgBsb,EAAY,GAAGvR,KAAOuR,EAAY,GAAGtR,OAAc,MAALrC,GAAkB,MAALE,EAEzF,OAAOyT,EAAYO,MAAKvS,GAAQ3B,EAAI2B,EAAKS,KAAOjB,EAAciB,MAAQpC,EAAI2B,EAAKU,MAAQlB,EAAckB,OAASnC,EAAIyB,EAAKO,IAAMf,EAAce,KAAOhC,EAAIyB,EAAKQ,OAAShB,EAAcgB,UAAW6R,EAI/L,GAAIL,EAAYtb,QAAU,EAAG,CAC3B,GAA+B,OAA3BkH,EAAAA,EAAAA,IAAYL,GAAoB,CAClC,MAAMiV,EAAYR,EAAY,GACxBS,EAAWT,EAAYA,EAAYtb,OAAS,GAC5Cgc,EAA+B,SAAvBxU,EAAAA,EAAAA,IAAQX,GAChBgD,EAAMiS,EAAUjS,IAChBC,EAASiS,EAASjS,OAClBC,EAAOiS,EAAQF,EAAU/R,KAAOgS,EAAShS,KACzCC,EAAQgS,EAAQF,EAAU9R,MAAQ+R,EAAS/R,MAGjD,MAAO,CACLH,MACAC,SACAC,OACAC,QACA1G,MAPY0G,EAAQD,EAQpBxG,OAPauG,EAASD,EAQtBlC,EAAGoC,EACHlC,EAAGgC,EAEP,CACA,MAAMoS,EAAoC,UAAvBzU,EAAAA,EAAAA,IAAQX,GACrBqV,GAAWxR,EAAAA,EAAAA,OAAO4Q,EAAY9Q,KAAIlB,GAAQA,EAAKU,SAC/CmS,GAAU5R,EAAAA,EAAAA,OAAO+Q,EAAY9Q,KAAIlB,GAAQA,EAAKS,QAC9CqS,EAAed,EAAYlc,QAAOkK,GAAQ2S,EAAa3S,EAAKS,OAASoS,EAAU7S,EAAKU,QAAUkS,IAC9FrS,EAAMuS,EAAa,GAAGvS,IACtBC,EAASsS,EAAaA,EAAapc,OAAS,GAAG8J,OAKrD,MAAO,CACLD,MACAC,SACAC,KAPWoS,EAQXnS,MAPYkS,EAQZ5Y,MARY4Y,EADDC,EAUX5Y,OAPauG,EAASD,EAQtBlC,EAXWwU,EAYXtU,EAAGgC,EAEP,CACA,OAAO8R,CACT,GAKE3U,SAAUpH,EAASoH,SACnBuB,aAEF,OAAID,EAAMvB,UAAUY,IAAMiU,EAAW7U,UAAUY,GAAKW,EAAMvB,UAAUc,IAAM+T,EAAW7U,UAAUc,GAAKS,EAAMvB,UAAUzD,QAAUsY,EAAW7U,UAAUzD,OAASgF,EAAMvB,UAAUxD,SAAWqY,EAAW7U,UAAUxD,OACnM,CACLmT,MAAO,CACLpO,MAAOsT,IAIN,CAAC,CACV,EAEJ,ECxBMS,ED2La,SAAUxc,GAI3B,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLA,UACA8U,EAAAA,CAAGxM,GACD,MAAM,EACJR,EAAC,EACDE,EAAC,UACDhB,EAAS,MACTyB,EAAK,eACLwM,GACE3M,GACE,OACJuM,EAAS,EACTU,SAAUgC,GAAgB,EAC1B/B,UAAWgC,GAAiB,IAC1BxO,EAAAA,EAAAA,IAAShJ,EAASsI,GAChBJ,EAAS,CACbJ,IACAE,KAEIwN,GAAYnO,EAAAA,EAAAA,IAAYL,GACxBuO,GAAWmC,EAAAA,EAAAA,IAAgBlC,GACjC,IAAImC,EAAgBzP,EAAOqN,GACvBqC,EAAiB1P,EAAOsN,GAC5B,MAAMiH,GAAYzT,EAAAA,EAAAA,IAAS6L,EAAQvM,GAC7BoU,EAAsC,kBAAdD,EAAyB,CACrDlH,SAAUkH,EACVjH,UAAW,GACT,CACFD,SAAU,EACVC,UAAW,KACRiH,GAEL,GAAIlF,EAAe,CACjB,MAAMoF,EAAmB,MAAbpH,EAAmB,SAAW,QACpCqH,EAAWnU,EAAMvB,UAAUqO,GAAY9M,EAAMtB,SAASwV,GAAOD,EAAenH,SAC5EsH,EAAWpU,EAAMvB,UAAUqO,GAAY9M,EAAMvB,UAAUyV,GAAOD,EAAenH,SAC/EoC,EAAgBiF,EAClBjF,EAAgBiF,EACPjF,EAAgBkF,IACzBlF,EAAgBkF,EAEpB,CACA,GAAIrF,EAAgB,CAClB,IAAIzC,EAAuB+H,EAC3B,MAAMH,EAAmB,MAAbpH,EAAmB,QAAU,SACnCwH,EAAe,CAAC,MAAO,QAAQlc,UAAS8G,EAAAA,EAAAA,IAAQX,IAChD4V,EAAWnU,EAAMvB,UAAUsO,GAAa/M,EAAMtB,SAASwV,IAAQI,IAAmE,OAAlDhI,EAAwBE,EAAeJ,aAAkB,EAASE,EAAsBS,KAAmB,IAAMuH,EAAe,EAAIL,EAAelH,WACnOqH,EAAWpU,EAAMvB,UAAUsO,GAAa/M,EAAMvB,UAAUyV,IAAQI,EAAe,GAAyD,OAAnDD,EAAyB7H,EAAeJ,aAAkB,EAASiI,EAAuBtH,KAAe,IAAMuH,EAAeL,EAAelH,UAAY,GAChPoC,EAAiBgF,EACnBhF,EAAiBgF,EACRhF,EAAiBiF,IAC1BjF,EAAiBiF,EAErB,CACA,MAAO,CACL,CAACtH,GAAWoC,EACZ,CAACnC,GAAYoC,EAEjB,EAEJ,ECrPMoF,EAAkBA,CAAC9V,EAAWC,EAAUnH,KAI5C,MAAMkQ,EAAQ,IAAI+M,IACZC,EAAgB,CACpB1U,cACGxI,GAECmd,EAAoB,IACrBD,EAAc1U,SACjBwI,GAAId,GAEN,MDloBsB9H,OAAOlB,EAAWC,EAAUiW,KAClD,MAAM,UACJpW,EAAY,SAAQ,SACpB0B,EAAW,WAAU,WACrB2U,EAAa,GAAE,SACf7U,GACE4U,EACEE,EAAkBD,EAAW9d,OAAOge,SACpCtW,QAA+B,MAAlBuB,EAASkJ,WAAgB,EAASlJ,EAASkJ,MAAMvK,IACpE,IAAIsB,QAAcD,EAAS4I,gBAAgB,CACzClK,YACAC,WACAuB,cAEE,EACFZ,EAAC,EACDE,GACEjB,EAA2B0B,EAAOzB,EAAWC,GAC7CuW,EAAoBxW,EACpBiO,EAAiB,CAAC,EAClBwI,EAAa,EACjB,IAAK,IAAIta,EAAI,EAAGA,EAAIma,EAAgBnd,OAAQgD,IAAK,CAC/C,MAAM,KACJd,EAAI,GACJyS,GACEwI,EAAgBna,IAElB2E,EAAG4V,EACH1V,EAAG2V,EAAK,KACRtM,EAAI,MACJwF,SACQ/B,EAAG,CACXhN,IACAE,IACAkQ,iBAAkBlR,EAClBA,UAAWwW,EACX9U,WACAuM,iBACAxM,QACAD,WACAzI,SAAU,CACRmH,YACAC,cAGJW,EAAa,MAAT4V,EAAgBA,EAAQ5V,EAC5BE,EAAa,MAAT2V,EAAgBA,EAAQ3V,EAC5BiN,EAAiB,IACZA,EACH,CAAC5S,GAAO,IACH4S,EAAe5S,MACfgP,IAGHwF,GAAS4G,GAAc,KACzBA,IACqB,kBAAV5G,IACLA,EAAM7P,YACRwW,EAAoB3G,EAAM7P,WAExB6P,EAAMpO,QACRA,GAAwB,IAAhBoO,EAAMpO,YAAuBD,EAAS4I,gBAAgB,CAC5DlK,YACAC,WACAuB,aACGmO,EAAMpO,SAGXX,IACAE,KACEjB,EAA2B0B,EAAO+U,EAAmBvW,KAE3D9D,GAAK,EAET,CACA,MAAO,CACL2E,IACAE,IACAhB,UAAWwW,EACX9U,WACAuM,iBACD,ECijBM2I,CAAkB1W,EAAWC,EAAU,IACzC+V,EACH1U,SAAU2U,GACV,uJCjsBA1G,EAA4B,qBAAboH,SAA2BC,EAAAA,gBAAkBC,EAAAA,UAIhE,SAASC,EAAUlc,EAAGC,GACpB,GAAID,IAAMC,EACR,OAAO,EAET,UAAWD,WAAaC,EACtB,OAAO,EAET,GAAiB,oBAAND,GAAoBA,EAAEmc,aAAelc,EAAEkc,WAChD,OAAO,EAET,IAAI9d,EACAgD,EACA+a,EACJ,GAAIpc,GAAKC,GAAkB,kBAAND,EAAgB,CACnC,GAAIrC,MAAM0e,QAAQrc,GAAI,CAEpB,GADA3B,EAAS2B,EAAE3B,OACPA,IAAW4B,EAAE5B,OAAQ,OAAO,EAChC,IAAKgD,EAAIhD,EAAgB,IAARgD,KACf,IAAK6a,EAAUlc,EAAEqB,GAAIpB,EAAEoB,IACrB,OAAO,EAGX,OAAO,CACT,CAGA,GAFA+a,EAAOE,OAAOF,KAAKpc,GACnB3B,EAAS+d,EAAK/d,OACVA,IAAWie,OAAOF,KAAKnc,GAAG5B,OAC5B,OAAO,EAET,IAAKgD,EAAIhD,EAAgB,IAARgD,KACf,IAAK,CAAC,EAAEkb,eAAe1f,KAAKoD,EAAGmc,EAAK/a,IAClC,OAAO,EAGX,IAAKA,EAAIhD,EAAgB,IAARgD,KAAY,CAC3B,MAAMmb,EAAMJ,EAAK/a,GACjB,IAAY,WAARmb,IAAoBxc,EAAEyc,YAGrBP,EAAUlc,EAAEwc,GAAMvc,EAAEuc,IACvB,OAAO,CAEX,CACA,OAAO,CACT,CACA,OAAOxc,IAAMA,GAAKC,IAAMA,CAC1B,CAEA,SAASyc,EAAO/f,GACd,GAAsB,qBAAXiE,OACT,OAAO,EAGT,OADYjE,EAAQG,cAAc6f,aAAe/b,QACtCgc,kBAAoB,CACjC,CAEA,SAASC,EAAWlgB,EAASmgB,GAC3B,MAAMC,EAAML,EAAO/f,GACnB,OAAOqgB,KAAKxT,MAAMsT,EAAQC,GAAOA,CACnC,CAEA,SAASE,EAAaH,GACpB,MAAMI,EAAMC,EAAAA,OAAaL,GAIzB,OAHAnI,GAAM,KACJuI,EAAIE,QAAUN,CAAK,IAEdI,CACT,CAMA,SAASG,EAAYnf,QACH,IAAZA,IACFA,EAAU,CAAC,GAEb,MAAM,UACJgH,EAAY,SAAQ,SACpB0B,EAAW,WAAU,WACrB2U,EAAa,GAAE,SACf7U,EACAzI,UACEmH,UAAWkY,EACXjY,SAAUkY,GACR,CAAC,EAAC,UACNC,GAAY,EAAI,qBAChBC,EAAoB,KACpBC,GACExf,GACGqR,EAAMoO,GAAWR,EAAAA,SAAe,CACrCnX,EAAG,EACHE,EAAG,EACHU,WACA1B,YACAiO,eAAgB,CAAC,EACjByK,cAAc,KAETC,EAAkBC,GAAuBX,EAAAA,SAAe5B,GAC1DW,EAAU2B,EAAkBtC,IAC/BuC,EAAoBvC,GAEtB,MAAOwC,EAAYC,GAAiBb,EAAAA,SAAe,OAC5Cc,EAAWC,GAAgBf,EAAAA,SAAe,MAC3CgB,EAAehB,EAAAA,aAAkBngB,IACjCA,IAASohB,EAAahB,UACxBgB,EAAahB,QAAUpgB,EACvBghB,EAAchhB,GAChB,GACC,IACGqhB,EAAclB,EAAAA,aAAkBngB,IAChCA,IAASshB,EAAYlB,UACvBkB,EAAYlB,QAAUpgB,EACtBkhB,EAAalhB,GACf,GACC,IACGsT,EAAcgN,GAAqBS,EACnCQ,EAAahB,GAAoBU,EACjCG,EAAejB,EAAAA,OAAa,MAC5BmB,EAAcnB,EAAAA,OAAa,MAC3BqB,EAAUrB,EAAAA,OAAa5N,GACvBkP,EAAkD,MAAxBhB,EAC1BiB,EAA0BzB,EAAaQ,GACvCkB,EAAc1B,EAAavW,GAC3BoJ,EAASqN,EAAAA,aAAkB,KAC/B,IAAKiB,EAAahB,UAAYkB,EAAYlB,QACxC,OAEF,MAAM9B,EAAS,CACbpW,YACA0B,WACA2U,WAAYsC,GAEVc,EAAYvB,UACd9B,EAAO5U,SAAWiY,EAAYvB,UAEhClC,EAAAA,EAAAA,IAAgBkD,EAAahB,QAASkB,EAAYlB,QAAS9B,GAAQsD,MAAKrP,IACtE,MAAMsP,EAAW,IACZtP,EACHqO,cAAc,GAEZkB,EAAa1B,UAAYlB,EAAUsC,EAAQpB,QAASyB,KACtDL,EAAQpB,QAAUyB,EAClBE,EAAAA,WAAmB,KACjBpB,EAAQkB,EAAS,IAErB,GACA,GACD,CAAChB,EAAkB3Y,EAAW0B,EAAU+X,IAC3ChK,GAAM,MACS,IAAT+I,GAAkBc,EAAQpB,QAAQQ,eACpCY,EAAQpB,QAAQQ,cAAe,EAC/BD,GAAQpO,IAAQ,IACXA,EACHqO,cAAc,MAElB,GACC,CAACF,IACJ,MAAMoB,EAAe3B,EAAAA,QAAa,GAClCxI,GAAM,KACJmK,EAAa1B,SAAU,EAChB,KACL0B,EAAa1B,SAAU,CAAK,IAE7B,IACHzI,GAAM,KAGJ,GAFIrE,IAAa8N,EAAahB,QAAU9M,GACpCiO,IAAYD,EAAYlB,QAAUmB,GAClCjO,GAAeiO,EAAY,CAC7B,GAAIG,EAAwBtB,QAC1B,OAAOsB,EAAwBtB,QAAQ9M,EAAaiO,EAAYzO,GAElEA,GACF,IACC,CAACQ,EAAaiO,EAAYzO,EAAQ4O,EAAyBD,IAC9D,MAAMO,EAAO7B,EAAAA,SAAc,KAAM,CAC/B/X,UAAWgZ,EACX/Y,SAAUiZ,EACVH,eACAE,iBACE,CAACF,EAAcE,IACbpgB,EAAWkf,EAAAA,SAAc,KAAM,CACnC/X,UAAWkL,EACXjL,SAAUkZ,KACR,CAACjO,EAAaiO,IACZU,EAAiB9B,EAAAA,SAAc,KACnC,MAAM+B,EAAgB,CACpB/R,SAAUvG,EACVwB,KAAM,EACNF,IAAK,GAEP,IAAKjK,EAASoH,SACZ,OAAO6Z,EAET,MAAMlZ,EAAI6W,EAAW5e,EAASoH,SAAUkK,EAAKvJ,GACvCE,EAAI2W,EAAW5e,EAASoH,SAAUkK,EAAKrJ,GAC7C,OAAIsX,EACK,IACF0B,EACH1B,UAAW,aAAexX,EAAI,OAASE,EAAI,SACvCwW,EAAOze,EAASoH,WAAa,KAAO,CACtC8Z,WAAY,cAIX,CACLhS,SAAUvG,EACVwB,KAAMpC,EACNkC,IAAKhC,EACN,GACA,CAACU,EAAU4W,EAAWvf,EAASoH,SAAUkK,EAAKvJ,EAAGuJ,EAAKrJ,IACzD,OAAOiX,EAAAA,SAAc,KAAM,IACtB5N,EACHO,SACAkP,OACA/gB,WACAghB,oBACE,CAAC1P,EAAMO,EAAQkP,EAAM/gB,EAAUghB,GACrC,CAQA,MAAMG,EAAUlhB,IAIP,CACLqC,KAAM,QACNrC,UACA8U,EAAAA,CAAGxM,GACD,MAAM,QACJ7J,EAAO,QACPsK,GACqB,oBAAZ/I,EAAyBA,EAAQsI,GAAStI,EACrD,OAAIvB,IAXOmgB,EAWUngB,EAVhB,CAAC,EAAE4f,eAAe1f,KAAKigB,EAAO,YAWV,MAAnBngB,EAAQygB,SACHiC,EAAAA,EAAAA,IAAQ,CACb1iB,QAASA,EAAQygB,QACjBnW,YACC+L,GAAGxM,GAED,CAAC,EAEN7J,GACK0iB,EAAAA,EAAAA,IAAQ,CACb1iB,UACAsK,YACC+L,GAAGxM,GAED,CAAC,EA1BZ,IAAesW,CA2Bb,IAWE/J,EAASA,CAAC7U,EAASohB,KAAS,KAC7BC,EAAAA,EAAAA,IAASrhB,GACZA,QAAS,CAACA,EAASohB,KAQfhhB,EAAQA,CAACJ,EAASohB,KAAS,KAC5BE,EAAAA,EAAAA,IAAQthB,GACXA,QAAS,CAACA,EAASohB,KAKf5E,EAAaA,CAACxc,EAASohB,KAAS,KACjCG,EAAAA,EAAAA,IAAavhB,GAChBA,QAAS,CAACA,EAASohB,KASfpJ,EAAOA,CAAChY,EAASohB,KAAS,KAC3BI,EAAAA,EAAAA,IAAOxhB,GACVA,QAAS,CAACA,EAASohB,KASfnI,EAAOA,CAACjZ,EAASohB,KAAS,KAC3BK,EAAAA,EAAAA,IAAOzhB,GACVA,QAAS,CAACA,EAASohB,KASfxL,EAAgBA,CAAC5V,EAASohB,KAAS,KACpCM,EAAAA,EAAAA,IAAgB1hB,GACnBA,QAAS,CAACA,EAASohB,KAQfnH,EAAOA,CAACja,EAASohB,KAAS,KAC3BO,EAAAA,EAAAA,IAAO3hB,GACVA,QAAS,CAACA,EAASohB,KAQf7F,EAASA,CAACvb,EAASohB,KAAS,KAC7BQ,EAAAA,EAAAA,IAAS5hB,GACZA,QAAS,CAACA,EAASohB,KASf1L,EAAQA,CAAC1V,EAASohB,KAAS,IAC5BF,EAAQlhB,GACXA,QAAS,CAACA,EAASohB,mMCpWrB,SAASS,EAAcC,GACrB,IAAID,EAAgBC,EAAID,cACxB,KAAqJ,OAAzG,OAAnCE,EAAiBF,IAA0E,OAA/CE,EAAiBA,EAAejhB,iBAAsB,EAASihB,EAAeF,gBAAwB,CACzJ,IAAIE,EACJF,EAAgBA,EAAc/gB,WAAW+gB,aAC3C,CACA,OAAOA,CACT,CACA,SAAShd,EAASmd,EAAQzc,GACxB,IAAKyc,IAAWzc,EACd,OAAO,EAET,MAAMpB,EAAgC,MAArBoB,EAAM/G,iBAAsB,EAAS+G,EAAM/G,cAG5D,GAAIwjB,EAAOnd,SAASU,GAClB,OAAO,EAIT,GAAIpB,IAAY8d,EAAAA,EAAAA,IAAa9d,GAAW,CACtC,IAAI+d,EAAO3c,EACX,KAAO2c,GAAM,CACX,GAAIF,IAAWE,EACb,OAAO,EAGTA,EAAOA,EAAK/iB,YAAc+iB,EAAK7d,IACjC,CACF,CAGA,OAAO,CACT,CAEA,SAAS8d,IACP,MAAMC,EAASC,UAAUC,cACzB,OAAc,MAAVF,GAAkBA,EAAO5Z,SACpB4Z,EAAO5Z,SAET6Z,UAAU7Z,QACnB,CACA,SAAS+Z,IACP,MAAMH,EAASC,UAAUC,cACzB,OAAIF,GAAU3iB,MAAM0e,QAAQiE,EAAOI,QAC1BJ,EAAOI,OAAO7X,KAAI/G,IACvB,IAAI,MACF6e,EAAK,QACLC,GACE9e,EACJ,OAAO6e,EAAQ,IAAMC,CAAO,IAC3BzkB,KAAK,KAEHokB,UAAUM,SACnB,CAGA,SAASC,EAAeC,GAGtB,QAA6B,IAAzBA,EAAMC,iBAAwBD,EAAME,aAGpCC,KAAeH,EAAMI,YACD,UAAfJ,EAAM1gB,MAAsC,IAAlB0gB,EAAMK,QAEjB,IAAjBL,EAAMM,SAAiBN,EAAMI,YACtC,CACA,SAASG,EAAsBP,GAC7B,OAiBON,IAAe1hB,SAAS,aAhBvBmiB,KAA+B,IAAhBH,EAAMpf,OAAgC,IAAjBof,EAAMnf,QAAgBsf,KAA+B,IAAhBH,EAAMpf,OAAgC,IAAjBof,EAAMnf,QAAmC,IAAnBmf,EAAMQ,UAAmC,IAAjBR,EAAMM,QAAsC,UAAtBN,EAAMI,aAEhLJ,EAAMpf,MAAQ,GAAKof,EAAMnf,OAAS,GAAwB,IAAnBmf,EAAMQ,UAAmC,IAAjBR,EAAMM,QAAsC,UAAtBN,EAAMI,YAC7F,CACA,SAASK,IAEP,MAAO,SAAS7hB,KAAK4gB,UAAUkB,OACjC,CACA,SAASP,IACP,MAAMQ,EAAK,WACX,OAAOA,EAAG/hB,KAAK0gB,MAAkBqB,EAAG/hB,KAAK8gB,IAC3C,CACA,SAASkB,IACP,OAAOtB,IAAcuB,cAAcC,WAAW,SAAWtB,UAAUuB,cACrE,CAIA,SAASC,EAAuBZ,EAAaa,GAG3C,MAAMC,EAAS,CAAC,QAAS,OAIzB,OAHKD,GACHC,EAAOpjB,KAAK,QAAI0V,GAEX0N,EAAOljB,SAASoiB,EACzB,CACA,SAASe,EAAanB,GACpB,MAAO,gBAAiBA,CAC1B,CACA,SAASoB,EAAcxlB,GACrB,OAAOA,EAAQL,QAAQ,YACzB,CACA,SAAS8lB,EAAYplB,GACnB,OAAgB,MAARA,OAAe,EAASA,EAAKF,gBAAkBif,QACzD,CACA,SAASsG,EAAoBtB,EAAO/jB,GAClC,GAAY,MAARA,EACF,OAAO,EAET,GAAI,iBAAkB+jB,EACpB,OAAOA,EAAMuB,eAAevjB,SAAS/B,GAIvC,MAAM4O,EAAImV,EACV,OAAmB,MAAZnV,EAAEwG,QAAkBpV,EAAK+F,SAAS6I,EAAEwG,OAC7C,CACA,SAASmQ,EAAUxB,GACjB,MAAI,iBAAkBA,EACbA,EAAMuB,eAAe,GAKvBvB,EAAM3O,MACf,CACA,MAAMoQ,EAAoB,uHAC1B,SAASC,EAAkB9lB,GACzB,OAAOyM,EAAAA,EAAAA,IAAczM,IAAYA,EAAQL,QAAQkmB,EACnD,CACA,SAASE,EAAU3B,GACjBA,EAAM4B,iBACN5B,EAAM6B,iBACR,CACA,SAASC,EAAmBlmB,GAC1B,QAAKA,IACmC,aAAjCA,EAAQS,aAAa,SAA0BqlB,EAAkB9lB,GAC1E,kBC5IA,SAAS6Q,EAAYxQ,GACnB,OAAI8lB,EAAO9lB,IACDA,EAAK+lB,UAAY,IAAInB,cAKxB,WACT,CACA,SAAS1X,EAAUlN,GACjB,IAAI2F,EACJ,OAAgB,MAAR3F,GAA8D,OAA7C2F,EAAsB3F,EAAKF,oBAAyB,EAAS6F,EAAoBga,cAAgB/b,MAC5H,CACA,SAAS8G,EAAmB1K,GAC1B,IAAI8E,EACJ,OAA0F,OAAlFA,GAAQghB,EAAO9lB,GAAQA,EAAKF,cAAgBE,EAAK+e,WAAanb,OAAOmb,eAAoB,EAASja,EAAKwL,eACjH,CACA,SAASwV,EAAOhG,GACd,OAAOA,aAAiBkG,MAAQlG,aAAiB5S,EAAU4S,GAAOkG,IACpE,CACA,SAASxb,EAAUsV,GACjB,OAAOA,aAAiBzgB,SAAWygB,aAAiB5S,EAAU4S,GAAOzgB,OACvE,CACA,SAAS+M,EAAc0T,GACrB,OAAOA,aAAiBmG,aAAenG,aAAiB5S,EAAU4S,GAAOmG,WAC3E,CACA,SAAS9C,EAAarD,GAEpB,MAA0B,qBAAfoG,aAGJpG,aAAiBoG,YAAcpG,aAAiB5S,EAAU4S,GAAOoG,WAC1E,CACA,SAASzV,EAAkB9Q,GACzB,MAAM,SACJ4L,EAAQ,UACR4a,EAAS,UACTC,EAAS,QACTC,GACErhB,EAAiBrF,GACrB,MAAO,kCAAkCgD,KAAK4I,EAAW6a,EAAYD,KAAe,CAAC,SAAU,YAAYpkB,SAASskB,EACtH,CACA,SAAStV,EAAepR,GACtB,MAAO,CAAC,QAAS,KAAM,MAAMoC,SAASyO,EAAY7Q,GACpD,CACA,SAASqR,EAAkBrR,GACzB,MAAM2mB,EAASnZ,IACTlB,EAAMjH,EAAiBrF,GAG7B,MAAyB,SAAlBsM,EAAIuU,WAA4C,SAApBvU,EAAIsa,eAA2Bta,EAAIua,eAAsC,WAAtBva,EAAIua,gBAAwCF,KAAWra,EAAIwa,gBAAwC,SAAvBxa,EAAIwa,iBAAuCH,KAAWra,EAAIxL,QAAwB,SAAfwL,EAAIxL,QAA8B,CAAC,YAAa,cAAe,UAAU+F,MAAKsZ,IAAU7T,EAAIkW,YAAc,IAAIpgB,SAAS+d,MAAW,CAAC,QAAS,SAAU,SAAU,WAAWtZ,MAAKsZ,IAAU7T,EAAIya,SAAW,IAAI3kB,SAAS+d,IAC7b,CACA,SAAS7O,EAAmBtR,GAC1B,IAAIgS,EAAc1B,EAActQ,GAChC,KAAOyM,EAAcuF,KAAiBzB,EAAsByB,IAAc,CACxE,GAAIX,EAAkBW,GACpB,OAAOA,EAETA,EAAc1B,EAAc0B,EAC9B,CACA,OAAO,IACT,CACA,SAASxE,IACP,QAAmB,qBAARtJ,MAAwBA,IAAI8iB,WAChC9iB,IAAI8iB,SAAS,0BAA2B,OACjD,CACA,SAASzW,EAAsBlQ,GAC7B,MAAO,CAAC,OAAQ,OAAQ,aAAa+B,SAASyO,EAAYxQ,GAC5D,CACA,SAASgF,EAAiBrF,GACxB,OAAOuN,EAAUvN,GAASqF,iBAAiBrF,EAC7C,CACA,SAASmP,EAAcnP,GACrB,OAAI6K,EAAU7K,GACL,CACLoP,WAAYpP,EAAQoP,WACpBY,UAAWhQ,EAAQgQ,WAGhB,CACLZ,WAAYpP,EAAQinB,YACpBjX,UAAWhQ,EAAQknB,YAEvB,CACA,SAAS5W,EAAcjQ,GACrB,GAA0B,SAAtBwQ,EAAYxQ,GACd,OAAOA,EAET,MAAMuR,EAENvR,EAAKsF,cAELtF,EAAKK,YAEL8iB,EAAanjB,IAASA,EAAKuF,MAE3BmF,EAAmB1K,GACnB,OAAOmjB,EAAa5R,GAAUA,EAAOhM,KAAOgM,CAC9C,CACA,SAASuV,EAA2B9mB,GAClC,MAAMK,EAAa4P,EAAcjQ,GACjC,OAAIkQ,EAAsB7P,GACjBL,EAAKF,cAAgBE,EAAKF,cAAc0P,KAAOxP,EAAKwP,KAEzDpD,EAAc/L,IAAeoQ,EAAkBpQ,GAC1CA,EAEFymB,EAA2BzmB,EACpC,CACA,SAASmR,EAAqBxR,EAAM+mB,EAAMC,GACxC,IAAIC,OACS,IAATF,IACFA,EAAO,SAEe,IAApBC,IACFA,GAAkB,GAEpB,MAAME,EAAqBJ,EAA2B9mB,GAChDmnB,EAASD,KAAuE,OAA9CD,EAAuBjnB,EAAKF,oBAAyB,EAASmnB,EAAqBzX,MACrHvC,EAAMC,EAAUga,GACtB,OAAIC,EACKJ,EAAKnf,OAAOqF,EAAKA,EAAIG,gBAAkB,GAAIqD,EAAkByW,GAAsBA,EAAqB,GAAIja,EAAIiB,cAAgB8Y,EAAkBxV,EAAqBvE,EAAIiB,cAAgB,IAE7L6Y,EAAKnf,OAAOsf,EAAoB1V,EAAqB0V,EAAoB,GAAIF,GACtF,wXCvHA,MAAMvb,EAAQ,CAAC,MAAO,QAAS,SAAU,QACnC2b,EAAa,CAAC,QAAS,OACvBjQ,EAA0B1L,EAAMhE,QAAO,CAACC,EAAKkB,IAASlB,EAAIE,OAAOgB,EAAMA,EAAO,IAAMwe,EAAW,GAAIxe,EAAO,IAAMwe,EAAW,KAAK,IAChIxb,EAAMoU,KAAKpU,IACXG,EAAMiU,KAAKjU,IACXS,EAAQwT,KAAKxT,MACb+H,EAAQyL,KAAKzL,MACb3H,EAAe0L,IAAK,CACxBtP,EAAGsP,EACHpP,EAAGoP,IAEC+O,EAAkB,CACtBjc,KAAM,QACNC,MAAO,OACPF,OAAQ,MACRD,IAAK,UAEDoc,EAAuB,CAC3BC,MAAO,MACPC,IAAK,SAEP,SAASxO,EAAMuO,EAAOzH,EAAO0H,GAC3B,OAAOzb,EAAIwb,EAAO3b,EAAIkU,EAAO0H,GAC/B,CACA,SAAStd,EAAS4V,EAAO2H,GACvB,MAAwB,oBAAV3H,EAAuBA,EAAM2H,GAAS3H,CACtD,CACA,SAASjX,EAAQX,GACf,OAAOA,EAAUwf,MAAM,KAAK,EAC9B,CACA,SAASre,EAAanB,GACpB,OAAOA,EAAUwf,MAAM,KAAK,EAC9B,CACA,SAAS9O,EAAgB4C,GACvB,MAAgB,MAATA,EAAe,IAAM,GAC9B,CACA,SAAS7S,EAAc6S,GACrB,MAAgB,MAATA,EAAe,SAAW,OACnC,CACA,SAASjT,EAAYL,GACnB,MAAO,CAAC,MAAO,UAAUnG,SAAS8G,EAAQX,IAAc,IAAM,GAChE,CACA,SAASO,EAAiBP,GACxB,OAAO0Q,EAAgBrQ,EAAYL,GACrC,CACA,SAAS4P,EAAkB5P,EAAWyB,EAAOxB,QAC/B,IAARA,IACFA,GAAM,GAER,MAAMkO,EAAYhN,EAAanB,GACzBM,EAAgBC,EAAiBP,GACjC7G,EAASsH,EAAcH,GAC7B,IAAImf,EAAsC,MAAlBnf,EAAwB6N,KAAelO,EAAM,MAAQ,SAAW,QAAU,OAAuB,UAAdkO,EAAwB,SAAW,MAI9I,OAHI1M,EAAMvB,UAAU/G,GAAUsI,EAAMtB,SAAShH,KAC3CsmB,EAAoBhO,EAAqBgO,IAEpC,CAACA,EAAmBhO,EAAqBgO,GAClD,CACA,SAAS/N,EAAsB1R,GAC7B,MAAM0f,EAAoBjO,EAAqBzR,GAC/C,MAAO,CAACsP,EAA8BtP,GAAY0f,EAAmBpQ,EAA8BoQ,GACrG,CACA,SAASpQ,EAA8BtP,GACrC,OAAOA,EAAU2f,QAAQ,cAAcxR,GAAaiR,EAAqBjR,IAC3E,CAkBA,SAASwD,EAA0B3R,EAAWuR,EAAe7J,EAAWzH,GACtE,MAAMkO,EAAYhN,EAAanB,GAC/B,IAAI6e,EAnBN,SAAqBne,EAAMkf,EAAS3f,GAClC,MAAM4f,EAAK,CAAC,OAAQ,SACdC,EAAK,CAAC,QAAS,QACfC,EAAK,CAAC,MAAO,UACbC,EAAK,CAAC,SAAU,OACtB,OAAQtf,GACN,IAAK,MACL,IAAK,SACH,OAAIT,EAAY2f,EAAUE,EAAKD,EACxBD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EAAUG,EAAKC,EACxB,QACE,MAAO,GAEb,CAGaC,CAAYtf,EAAQX,GAA0B,UAAd0H,EAAuBzH,GAOlE,OANIkO,IACF0Q,EAAOA,EAAKlb,KAAIjD,GAAQA,EAAO,IAAMyN,IACjCoD,IACFsN,EAAOA,EAAKnf,OAAOmf,EAAKlb,IAAI2L,MAGzBuP,CACT,CACA,SAASpN,EAAqBzR,GAC5B,OAAOA,EAAU2f,QAAQ,0BAA0Bjf,GAAQye,EAAgBze,IAC7E,CAUA,SAASwB,EAAiBH,GACxB,MAA0B,kBAAZA,EAVhB,SAA6BA,GAC3B,MAAO,CACLiB,IAAK,EACLG,MAAO,EACPF,OAAQ,EACRC,KAAM,KACHnB,EAEP,CAEuCme,CAAoBne,GAAW,CAClEiB,IAAKjB,EACLoB,MAAOpB,EACPkB,OAAQlB,EACRmB,KAAMnB,EAEV,CACA,SAASK,EAAiBK,GACxB,MAAM,EACJ3B,EAAC,EACDE,EAAC,MACDvE,EAAK,OACLC,GACE+F,EACJ,MAAO,CACLhG,QACAC,SACAsG,IAAKhC,EACLkC,KAAMpC,EACNqC,MAAOrC,EAAIrE,EACXwG,OAAQjC,EAAItE,EACZoE,IACAE,IAEJ","sources":["../node_modules/tabbable/src/index.js","../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","../node_modules/@floating-ui/react/dist/floating-ui.react.utils.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"],"sourcesContent":["// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        isPositioned: true\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n","import { isShadowRoot, isHTMLElement } from '@floating-ui/utils/dom';\n\nfunction activeElement(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null || (_activeElement = _activeElement.shadowRoot) == null ? void 0 : _activeElement.activeElement) != null) {\n    var _activeElement;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  // FIXME: Firefox is now emitting a deprecation warning for `mozInputSource`.\n  // Try to find a workaround for this. `react-aria` source still has the check.\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  if (isAndroid() && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  if (isJSDOM()) return false;\n  return !isAndroid() && event.width === 0 && event.height === 0 || isAndroid() && event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'touch';\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isAndroid() {\n  const re = /android/i;\n  return re.test(getPlatform()) || re.test(getUserAgent());\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isJSDOM() {\n  return getUserAgent().includes('jsdom/');\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\nfunction isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\nfunction isRootElement(element) {\n  return element.matches('html,body');\n}\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nfunction isTypeableCombobox(element) {\n  if (!element) return false;\n  return element.getAttribute('role') === 'combobox' && isTypeableElement(element);\n}\n\nexport { TYPEABLE_SELECTOR, activeElement, contains, getDocument, getPlatform, getTarget, getUserAgent, isAndroid, isEventTargetWithin, isJSDOM, isMac, isMouseLikePointerType, isReactEvent, isRootElement, isSafari, isTypeableCombobox, isTypeableElement, isVirtualClick, isVirtualPointerEvent, stopEvent };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n"],"names":["candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","_element$getRootNode","call","ownerDocument","isInert","node","lookUp","_node$getAttribute","inertAtt","getAttribute","parentNode","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","nestedCandidates","children","flatten","push","scopeParent","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","hasTabIndex","isNaN","parseInt","getTabIndex","Error","tabIndex","test","_node$getAttribute2","attValue","isContentEditable","sortOrderedTabbables","a","b","documentOrder","isInput","isNonTabbableRadio","type","isRadio","name","radioSet","radioScope","form","queryRadios","window","CSS","escape","err","console","error","message","checked","nodes","i","getCheckedRadio","isTabbableRadio","isZeroArea","_node$getBoundingClie","getBoundingClientRect","width","height","isHidden","_ref","displayCheck","getComputedStyle","visibility","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","host","_nodeRoot","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","nodeRoot","nodeRootHost","attached","contains","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isNodeAttached","getClientRects","isNodeMatchingSelectorFocusable","disabled","isHiddenInput","some","child","isDetailsWithSummary","item","isDisabledFromFieldset","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","isScope","candidateTabindex","getSortOrderTabIndex","content","sort","reduce","acc","sortable","concat","tabbable","container","bind","isTabbable","computeCoordsFromPlacement","placement","rtl","reference","floating","sideAxis","getSideAxis","alignmentAxis","getAlignmentAxis","alignLength","getAxisLength","side","getSide","isVertical","commonX","x","commonY","y","commonAlign","coords","getAlignment","async","detectOverflow","state","_await$platform$isEle","platform","rects","strategy","boundary","rootBoundary","elementContext","altBoundary","padding","evaluate","paddingObject","getPaddingObject","clippingClientRect","rectToClientRect","getClippingRect","isElement","contextElement","getDocumentElement","rect","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","top","bottom","left","right","getSideOffsets","overflow","isAnySideFullyClipped","sides","getBoundingRect","minX","min","map","minY","max","getCssDimensions","css","parseFloat","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","round","$","unwrapElement","domElement","createCoords","Number","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","selector","e","getWindowScrollBarX","getNodeScroll","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","offsets","getNodeName","isOverflowElement","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","isTableElement","isContainingBlock","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","result","getOverflowAncestors","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","floor","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","detectOverflow$1","offset","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","alignment","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","allowedPlacements","placements","autoAlignment","detectOverflowOptions","placements$1","undefined","getOppositeAlignmentPlacement","getPlacementList","currentIndex","index","currentPlacement","alignmentSides","getAlignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","v","resetPlacement","every","checkMainAxis","checkCrossAxis","limiter","getOppositeAxis","mainAxisCoord","crossAxisCoord","maxSide","clamp","limitedCoords","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","getOppositePlacement","getExpandedPlacements","getOppositeAxisPlacements","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","size","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","hide","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","axis","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","inline","nativeClientRects","clientRects","sortedRects","groups","prevRect","getRectsByLine","fallback","resetRects","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition$1","document","useLayoutEffect","useEffect","deepEqual","toString","keys","isArray","Object","hasOwnProperty","key","$$typeof","getDPR","defaultView","devicePixelRatio","roundByDPR","value","dpr","Math","useLatestRef","ref","React","current","useFloating","externalReference","externalFloating","transform","whileElementsMounted","open","setData","isPositioned","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","referenceRef","setFloating","floatingRef","floatingEl","dataRef","hasWhileElementsMounted","whileElementsMountedRef","platformRef","then","fullData","isMountedRef","ReactDOM","refs","floatingStyles","initialStyles","willChange","arrow$1","arrow$2","deps","offset$1","shift$1","limitShift$1","flip$1","size$1","autoPlacement$1","hide$1","inline$1","activeElement","doc","_activeElement","parent","isShadowRoot","next","getPlatform","uaData","navigator","userAgentData","getUserAgent","brands","brand","version","userAgent","isVirtualClick","event","mozInputSource","isTrusted","isAndroid","pointerType","buttons","detail","isVirtualPointerEvent","pressure","isSafari","vendor","re","isMac","toLowerCase","startsWith","maxTouchPoints","isMouseLikePointerType","strict","values","isReactEvent","isRootElement","getDocument","isEventTargetWithin","composedPath","getTarget","TYPEABLE_SELECTOR","isTypeableElement","stopEvent","preventDefault","stopPropagation","isTypeableCombobox","isNode","nodeName","Node","HTMLElement","ShadowRoot","overflowX","overflowY","display","webkit","perspective","containerType","backdropFilter","contain","supports","pageXOffset","pageYOffset","getNearestOverflowAncestor","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","alignments","oppositeSideMap","oppositeAlignmentMap","start","end","param","split","mainAlignmentSide","oppositePlacement","replace","isStart","lr","rl","tb","bt","getSideList","expandPaddingObject"],"sourceRoot":""}