{"version":3,"file":"static/js/103.661327af.chunk.js","mappings":"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","sources":["components/pages/reset_password.jsx","components/reusable_components/alerts/alerts.jsx","utils/animation_variants.jsx","components/reusable_components/load_page_animation.jsx"],"sourcesContent":["import { useParams } from \"react-router\";\r\nimport { LoadPageAnimation } from \"../reusable_components/load_page_animation\";\r\nimport { useMutation } from \"react-query\";\r\nimport { resetPasswordFunc } from \"../../api/api\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { cn } from \"../../utils/custom_functions\";\r\nimport { Button } from \"../reusable_components/custom_button\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\nimport { ErrorAlert, SuccessAlert } from \"../reusable_components/alerts/alerts\";\r\nimport { FaRegEyeSlash, FaRegEye } from \"react-icons/fa6\";\r\nexport default function ResetPassword() {\r\n  const { token } = useParams();\r\n  const [isPasswordVisible, setIspasswordVisible] = useState(false);\r\n  const [isCpasswordVisible, setIsCpasswordVisible] = useState(false);\r\n  const [disableUserInterface, setDisableUserInterface] = useState(false);\r\n\r\n  // hooks\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: {\r\n      isLoading: isFormLoading,\r\n      errors: formErrors,\r\n      // isSubmitting: isFormSubmitting,\r\n    },\r\n  } = useForm();\r\n\r\n  const {\r\n    isLoading: isPasswordResetLoading,\r\n    isSuccess: isPasswordResetSuccess,\r\n    mutateAsync: resetPasswordFuncAsync,\r\n    isError: isPasswordError,\r\n    error: passwordError,\r\n  } = useMutation({\r\n    mutationFn: resetPasswordFunc,\r\n    onSuccess: (data) => {},\r\n    onMutate: (value) => {\r\n      setDisableUserInterface((p) => true);\r\n    },\r\n    onError: (e) => {\r\n      // console.log(e);\r\n      setDisableUserInterface((p) => false);\r\n    },\r\n  });\r\n\r\n  const submitHander = async (data) => {\r\n    try {\r\n      data[\"token\"] = token; // set token\r\n      await resetPasswordFuncAsync(data);\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoadPageAnimation>\r\n      <main className=\"max-w-xl mx-auto my-4 p-6 text-black bg-white\">\r\n        <div className=\"rounded-md p-4 shadow-sm border border-gray-200\">\r\n          <h2 className=\"text-start text-black pb-6 font-extrabold text-3xl\">\r\n            Reset password\r\n            <p className=\"text-sm font-normal text-slate-800 pt-2\">\r\n              Thank you for choosing Reload logistics services as your go to\r\n              service provider.{\" \"}\r\n              <span className=\"text-sm text-blue-700\">\r\n                Enter new password below, when finished submit the form\r\n              </span>\r\n              !.\r\n            </p>\r\n          </h2>\r\n          <div>\r\n            <form onSubmit={handleSubmit(submitHander)}>\r\n              <div>\r\n                <div className=\"mb-4\">\r\n                  <span className=\"text-gray-600 text-sm font-bold\">\r\n                    New password\r\n                  </span>\r\n                  <div className=\"relative\">\r\n                    <input\r\n                      {...register(\"password\", {\r\n                        required: \"Enter your new password\",\r\n                        disabled: disableUserInterface,\r\n                      })}\r\n                      type={isPasswordVisible ? \"text\" : \"password\"}\r\n                      name=\"password\"\r\n                      placeholder=\"Enter new password\"\r\n                      className={cn(\r\n                        \"peer text-sm pe-9 mt-2 text-slate-800 w-full shadow-sm relative block rounded-md border-gray-200 focus:z-10 focus:ring-yellow-400 focus:border-yellow-400 disabled:opacity-75 disabled:pointer-events-none\",\r\n                        {\r\n                          \" text-slate-800 placeholder:text-slate-800 bg-red-100\":\r\n                            formErrors.password,\r\n                        }\r\n                      )}\r\n                    />\r\n                    <div className=\"peer-focus:z-10 absolute inset-y-0 right-0 px-3 flex justify-center items-center\">\r\n                      <div onClick={() => setIspasswordVisible((r) => !r)}>\r\n                        {!isPasswordVisible ? (\r\n                          <FaRegEyeSlash\r\n                            className=\"text-yellow-400 cursor-pointer hover:opacity-75\"\r\n                            size={20}\r\n                          />\r\n                        ) : (\r\n                          <FaRegEye\r\n                            className=\"text-yellow-400 cursor-pointer hover:opacity-75\"\r\n                            size={20}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                  <span className=\"text-gray-600 text-sm font-bold\">\r\n                    Confirm password\r\n                  </span>\r\n                  <div className=\"relative\">\r\n                    <input\r\n                      {...register(\"cpassword\", {\r\n                        required: \"Enter confirmation password\",\r\n                        disabled: disableUserInterface,\r\n                        validate: (value) => {\r\n                          if (watch(\"password\") !== value) {\r\n                            return \"Oops! Passwords don't match\";\r\n                          }\r\n                        },\r\n                      })}\r\n                      type={isCpasswordVisible ? \"text\" : \"password\"}\r\n                      name=\"cpassword\"\r\n                      placeholder=\"Enter confirmation password\"\r\n                      className={cn(\r\n                        \"peer text-sm pe-9 mt-2 text-slate-800 w-full shadow-sm relative block rounded-md border-gray-200 focus:z-10 focus:ring-yellow-400 focus:border-yellow-400 disabled:opacity-75 disabled:pointer-events-none\",\r\n                        {\r\n                          \" text-slate-800 placeholder:text-slate-800 bg-red-100\":\r\n                            formErrors.password,\r\n                        }\r\n                      )}\r\n                    />\r\n                    <div className=\"peer-focus:z-10 absolute inset-y-0 right-0 px-3 flex justify-center items-center\">\r\n                      <div onClick={() => setIsCpasswordVisible((r) => !r)}>\r\n                        {!isCpasswordVisible ? (\r\n                          <FaRegEyeSlash\r\n                            className=\"text-yellow-400 cursor-pointer hover:opacity-75\"\r\n                            size={20}\r\n                          />\r\n                        ) : (\r\n                          <FaRegEye\r\n                            className=\"text-yellow-400 cursor-pointer hover:opacity-75\"\r\n                            size={20}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"my-1\">\r\n                {[formErrors.password, formErrors.cpassword].map(\r\n                  (value, index) => (\r\n                    <p key={index} className=\"text-red-500 text-sm italic\">\r\n                      {value?.message}\r\n                    </p>\r\n                  )\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"w-full pt-2\">\r\n                {isPasswordError && (\r\n                  <ErrorAlert\r\n                    className=\"mb-4\"\r\n                    secondaryText={`${passwordError.response.data.message} ${passwordError.message}`}\r\n                  />\r\n                )}\r\n                {isPasswordResetSuccess && (\r\n                  <SuccessAlert\r\n                    secondaryText={\r\n                      \"Password successfully reset, navigate to the signin page and signin\"\r\n                    }\r\n                    className=\"mb-4\"\r\n                  />\r\n                )}\r\n                <Button type=\"submit\" disabled={disableUserInterface}>\r\n                  {isPasswordResetLoading || isFormLoading ? (\r\n                    <div className=\"w-full h-full flex justify-center items-center\">\r\n                      <ThreeDots visible width=\"40\" height=\"20\" color=\"#000\" />\r\n                    </div>\r\n                  ) : (\r\n                    \"Reset password\"\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-20\" />\r\n      </main>\r\n    </LoadPageAnimation>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { cn } from \"../../../utils/custom_functions\";\r\n\r\n//\r\nexport function SuccessAlert({ secondaryText, className, children, ...props }) {\r\n  return (\r\n    <div\r\n      {...props}\r\n      className={cn(\r\n        \"bg-green-100 border-t-4 border-green-500 rounded-b-md text-green-900 px-4 py-2\",\r\n        className\r\n      )}\r\n      role=\"alert\"\r\n    >\r\n      <div className=\"flex text-wrap break-words\">\r\n        <div>\r\n          <p className=\"font-bold\">Yey ! all set</p>\r\n          <p className=\"text-sm text-wrap break-words\">\r\n            {secondaryText\r\n              ? secondaryText\r\n              : \"Welcome to Reload Logistics services\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function InfoAlert({\r\n  primaryText,\r\n  secondaryText,\r\n  className,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      {...props}\r\n      className={cn(\r\n        \"bg-blue-100 border-t-4 border-blue-500 rounded-b-md text-blue-700 px-4 py-2\",\r\n        className\r\n      )}\r\n      role=\"alert\"\r\n    >\r\n      <div className=\"flex text-wrap break-words\">\r\n        <div>\r\n          <p className=\"font-bold\">{primaryText}</p>\r\n          <p className=\"text-sm text-wrap break-words\">\r\n            {secondaryText\r\n              ? secondaryText\r\n              : \"Welcome to Reload Logistics services\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorAlert({ secondaryText, className, children, ...props }) {\r\n  return (\r\n    <div\r\n      {...props}\r\n      className={cn(\r\n        \"bg-red-100 border-t-4 border-red-500 rounded-b-md text-red-900 px-4 py-2\",\r\n        className\r\n      )}\r\n      role=\"alert\"\r\n    >\r\n      <div className=\"flex\">\r\n        <div>\r\n          <p className=\"font-bold\">Oops ! Error</p>\r\n          <p className=\"text-sm\">\r\n            {secondaryText ? secondaryText : \"An error occured\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const PAGES_VARIANT = {\r\n  hidden: {\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n  },\r\n};\r\n\r\nexport const SECTION_VARIANT = {\r\n  hidden: {\r\n    opacity: 0,\r\n    y: \"10px\",\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n  },\r\n};\r\n","import { motion } from \"framer-motion\";\r\nimport { PAGES_VARIANT } from \"../../utils/animation_variants\";\r\nimport {\r\n  SECTION_ANIMATION_DELAY,\r\n  SECTION_ANIMATION_DURATION,\r\n} from \"../../utils/information\";\r\n\r\nexport function LoadPageAnimation({ children, ...props }) {\r\n  return (\r\n    <motion.section\r\n      variants={PAGES_VARIANT}\r\n      animate=\"visible\"\r\n      initial=\"hidden\"\r\n      exit=\"exit\"\r\n      transition={{\r\n        duration: SECTION_ANIMATION_DURATION,\r\n        delay: SECTION_ANIMATION_DELAY,\r\n      }}\r\n    >\r\n      {children}\r\n    </motion.section>\r\n  );\r\n}\r\n"],"names":["ResetPassword","token","useParams","isPasswordVisible","setIspasswordVisible","useState","isCpasswordVisible","setIsCpasswordVisible","disableUserInterface","setDisableUserInterface","register","handleSubmit","watch","formState","isLoading","isFormLoading","errors","formErrors","useForm","isPasswordResetLoading","isSuccess","isPasswordResetSuccess","mutateAsync","resetPasswordFuncAsync","isError","isPasswordError","error","passwordError","useMutation","mutationFn","resetPasswordFunc","onSuccess","data","onMutate","value","p","onError","e","_jsx","LoadPageAnimation","children","_jsxs","className","onSubmit","async","required","disabled","type","name","placeholder","cn","password","onClick","r","FaRegEye","size","FaRegEyeSlash","validate","cpassword","map","index","message","ErrorAlert","secondaryText","concat","response","SuccessAlert","Button","ThreeDots","visible","width","height","color","_ref","props","role","InfoAlert","_ref2","primaryText","_ref3","PAGES_VARIANT","hidden","opacity","exit","motion","section","variants","animate","initial","transition","duration","SECTION_ANIMATION_DURATION","delay","SECTION_ANIMATION_DELAY"],"sourceRoot":""}